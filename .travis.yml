sudo: false
language: python
cache: pip  # use caching for pip's packages to speed up builds

branches:
  only:
  - master

os: linux

python:
- "2.7"
- "3.4"
- "3.5"
- "3.6"

env:
  global:
  - DISPLAY=:99.0
  - PYTHON="python"
  - PIP_INSTALL="pip install"
  - GENERAL_EXCLUDE="--exclude-dir=tests/resources --exclude-dir=tests/ci"

matrix:
  include:
  - os: osx
    language: generic
    env:
    - PYTHON="python2"
    - PIP_INSTALL="sudo pip2 install"
    - RVM_KEY="409B6B1796C275462A1703113804BB82D39DC0E3"
    - OSX_EXCLUDE="--exclude-test=tests.modules.selenium.test_csharp"
  - os: osx
    language: generic
    env:
    - PYTHON="3.5.1"
    - PIP_INSTALL="pip3 install"
    - RVM_KEY="409B6B1796C275462A1703113804BB82D39DC0E3"
    - OSX_EXCLUDE="--exclude-test=tests.modules.selenium.test_csharp"

addons:
  firefox: "57.0"
  apt:
    packages:
      - oracle-java8-set-default
      - mono-complete

install:
- |
  if [ "$TRAVIS_OS_NAME" = "linux" ]; then
    mono --version
  else
    gpg --keyserver hkp://keys.gnupg.net --recv-keys $RVM_KEY && rvm get stable || echo "rvm update fail"
    brew update
    # Per the `pyenv homebrew recommendations <https://github.com/yyuu/pyenv/wiki#suggested-build-environment>`_.
    brew install openssl readline
    # See https://docs.travis-ci.com/user/osx-ci-environment/#A-note-on-upgrading-packages.
    # I didn't do this above because it works and I'm lazy.
    brew outdated pyenv || brew upgrade pyenv
    # virtualenv doesn't work without pyenv knowledge. venv in Python 3.3
    # doesn't provide Pip by default. So, use `pyenv-virtualenv <https://github.com/yyuu/pyenv-virtualenv/blob/master/README.md>`_.
    brew install pyenv-virtualenv
    pyenv install $PYTHON
    # I would expect something like ``pyenv init; pyenv local $PYTHON`` or
    # ``pyenv shell $PYTHON`` would work, but ``pyenv init`` doesn't seem to
    # modify the Bash environment. ??? So, I hand-set the variables instead.
    export PYENV_VERSION=$PYTHON
    export PATH="/Users/travis/.pyenv/shims:${PATH}"
    pyenv-virtualenv venv
    source venv/bin/activate
    # A manual check that the correct version of Python is running.
    python --version
    pip --version
    python -m pip install -U pip
    python -m easy_install -U setuptools
  fi
- nvm install 6.11
- nvm use 6.11
- gem install rspec
- $PIP_INSTALL --upgrade pip
- $PIP_INSTALL -r requirements.txt
- $PIP_INSTALL -r tests/ci/requirements.txt

before_script:
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then sh -e /etc/init.d/xvfb start; fi
- if [ "$TRAVIS_OS_NAME" = "osx" ]; then sudo nohup bash -c "xvfb :99 &"; fi
- python tests/resources/httpserver/start.py &

script:
- coverage run --source=. nosetests tests -v $GENERAL_EXCLUDE $OSX_EXCLUDE

after_success:
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then coverage report -m && codecov; fi



