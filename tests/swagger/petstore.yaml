swagger: "2.0"
info:
  version: 1.0.0
  title: Swagger Petstore
  license:
    name: MIT
host: petstore.swagger.io
basePath: /v1
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          type: integer
          format: int32
      responses:
        "200":
          description: An paged array of pets
          headers:
            x-next:
              type: string
              description: A link to the next page of responses
          schema:
            $ref: '#/definitions/Pets'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create a pet
      operationId: createPets
      tags:
        - pets
      responses:
        "201":
          description: Null response
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /pets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          type: string
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/Pets'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /owners:
    parameters:
      - name: token
        in: header
        description: token to be passed as a header
        required: true
        type: string
        format: base64
    get:
      summary: List all owners
      operationId: listOwners
      tags:
        - owners
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: An paged array of owners
          schema:
            $ref: '#/definitions/Owners'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create an owner
      operationId: createOwner
      tags:
        - owners
      parameters:
        - name: name
          in: formData
          description: Name of the owner
          required: true
          type: string
      responses:
        "200":
          description: A freshly created owner
          schema:
            $ref: '#/definitions/Owner'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update the owner
      operationId: updateOwner
      tags:
        - owners
      parameters:
        - name: owner
          in: body
          description: Owner object
          required: true
          schema:
            $ref: '#/definitions/Owner'
      responses:
        "200":
          description: An updated owner
          schema:
            $ref: '#/definitions/Owner'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Pet:
    required:
      - id
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      tag:
        type: string
  Pets:
    type: array
    items:
      $ref: '#/definitions/Pet'
  Owner:
    required:
      - id
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      tag:
        type: string
  Owners:
    type: array
    items:
      $ref: '#/definitions/Owner'
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
