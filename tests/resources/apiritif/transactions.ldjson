{"status": "PASSED", "start_time": 1524473357.366692, "error_trace": null, "subsamples": [{"status": "PASSED", "start_time": 1524473357.557643, "error_trace": null, "subsamples": [], "assertions": [], "duration": 0.189823, "path": [{"type": "package", "value": "tests"}, {"type": "module", "value": "test_transactions"}, {"type": "class", "value": "TestRequests"}, {"type": "method", "value": "test_1_single_request"}, {"type": "request", "value": "https://jsonplaceholder.typicode.com/"}], "error_msg": null, "test_case": "https://jsonplaceholder.typicode.com/", "test_suite": "test_1_single_request", "extras": {"responseTime": 189, "responseHeadersSize": 661, "requestHeadersSize": 20, "responseSize": 6301, "latency": 189, "requestURI": "https://jsonplaceholder.typicode.com/", "responseBodySize": 6301, "connectTime": 0, "requestBodySize": 0, "requestBody": "", "responseBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>JSONPlaceholder - Fake online REST API for developers</title>\n<meta name=\"description\" content=\"Fake online REST API for developers\">\n<meta name=\"author\" content=\"Typicode\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/styles/github.min.css\">\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/highlight.min.js\"></script>\n<script>hljs.initHighlightingOnLoad();</script>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\">\n\n<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\n</head>\n<body>\n<header>\n<h1>\n<img src=\"http://i.imgur.com/QRlAg0b.png\">\n<br>JSONPlaceholder\n</h1>\n<p>\nFake Online REST API for Testing and Prototyping\n<br>\n<small>\npowered by\n<a href=\"https://github.com/typicode/json-server\">JSON Server</a>\nand\n<a href=\"https://github.com/typicode/lowdb\">lowdb</a>\n</small>\n</p>\n</header>\n<div class=\"see-also\">\n<div class=\"narrow\">\n<a href=\"https://cypress.io\" onclick=\"trackOutboundLink('https://cypress.io')\">\nSee also\n<img title=\"\" src=\"https://www.cypress.io/img/logo-dark.4e8064a6.png\" /> Fast, easy and reliable testing for anything that runs in a browser.</a>\n</div>\n</div>\n<div class=\"narrow\">\n\n<h2>Intro</h2>\n<p>\nJSONPlaceholder is a free online REST service that you can use whenever you need some fake data.\n</p>\n<p>\nIt's great for tutorials, faking a server, sharing code examples, ...\n</p>\n<h2>Example</h2>\n<p>\nRun this code in a console or from anywhere.\n<br> HTTP and HTTPS are both supported.\n</p>\n<pre><code id=\"example\" class=\"javascript\">fetch('https://jsonplaceholder.typicode.com/posts/1')\n  .then(response => response.json())\n  .then(json => console.log(json))\n</code></pre>\n<p>\n<button id=\"run\">Run</button>\n</p>\n<p id=\"result\" class=\"json\">// click the button above to make a request ;)</p>\n<h2>Resources</h2>\n<p>\nInspired by common use cases.\n</p>\n<table>\n<tr>\n<td>\n<a href=\"/posts\">/posts</a>\n</td>\n<td>100 items</td>\n</tr>\n<tr>\n<td>\n<a href=\"/comments\">/comments</a>\n</td>\n<td>500 items</td>\n</tr>\n<tr>\n<td>\n<a href=\"/albums\">/albums</a>\n</td>\n<td>100 items</td>\n</tr>\n<tr>\n<td>\n<a href=\"/photos\">/photos</a>\n</td>\n<td>5000 items</td>\n</tr>\n<tr>\n<td>\n<a href=\"/todos\">/todos</a>\n</td>\n<td>200 items</td>\n</tr>\n<tr>\n<td>\n<a href=\"/users\">/users</a>\n</td>\n<td>10 items</td>\n</tr>\n</table>\n<h2>Routes</h2>\n<p>\nAll HTTP verbs are supported.\n<br> View usage\n<a href=\"https://github.com/typicode/jsonplaceholder#how-to\">examples</a>.\n</p>\n<table>\n<tr>\n<td class=\"verb\">GET</td>\n<td>\n<a href=\"/posts\">/posts</a>\n</td>\n</tr>\n<tr>\n<td class=\"verb\">GET</td>\n<td>\n<a href=\"/posts/1\">/posts/1</a>\n</td>\n</tr>\n<tr>\n<td class=\"verb\">GET</td>\n<td>\n<a href=\"/posts/1/comments\">/posts/1/comments</a>\n</td>\n</tr>\n<tr>\n<td class=\"verb\">GET</td>\n<td>\n<a href=\"/comments?postId=1\">/comments?postId=1</a>\n</td>\n</tr>\n<tr>\n<td class=\"verb\">GET</td>\n<td>\n<a href=\"/posts?userId=1\">/posts?userId=1</a>\n</td>\n</tr>\n<tr>\n<td class=\"verb\">POST</td>\n<td>/posts</td>\n</tr>\n<tr>\n<td class=\"verb\">PUT</td>\n<td>/posts/1</td>\n</tr>\n<tr>\n<td class=\"verb\">PATCH</td>\n<td>/posts/1</td>\n</tr>\n<tr>\n<td class=\"verb\">DELETE</td>\n<td>/posts/1</td>\n</tr>\n</tr>\n</table>\n<h2>Use your OWN data</h2>\n<p>\n<a href=\"https://github.com/typicode/json-server\">JSON Server</a> powers this website. You can use it to create the same fake API in less than\n<strong>30 seconds</strong> with your own data.\n</p>\n<pre><code class=\"bash\">npm install -g json-server</code></pre>\n<p>Or you can try\n<a href=\"https://my-json-server.typicode.com\">My JSON Server</a> free service.</p>\n</div>\n<footer>\n<p>\nCoded and built with\n<i class=\"fa fa-heart\"></i>\nby\n<a href=\"https://github.com/typicode\">typicode</a>\n<br>Source code available on\n<a href=\"https://github.com/typicode/jsonplaceholder\">GitHub</a>\n<br> Support me on\n<a href=\"https://patreon.com/typicode\" onclick=\"trackOutboundLink('https://patreon.com/typicode')\">Patreon</a>\n</p>\n</footer>\n<div class=\"more\">\n</div>\n\n\n\n<script>\n    (function (i, s, o, g, r, a, m) {\n      i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {\n        (i[r].q = i[r].q || []).push(arguments)\n      }, i[r].l = 1 * new Date(); a = s.createElement(o), m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a,\n        m)\n    })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga'); ga('create', 'UA-44497010-1', 'typicode.com');\n    ga('send', 'pageview'); var trackOutboundLink = function (url) {\n      ga('send', 'event', 'outbound', 'click', url, {\n        'transport':\n          'beacon'\n      });\n    }\n  </script>\n<script>\n    window.twttr = (function (d, s, id) {\n      var js, fjs = d.getElementsByTagName(s)[0],\n        t = window.twttr || {};\n      if (d.getElementById(id)) return t;\n      js = d.createElement(s);\n      js.id = id;\n      js.src = \"https://platform.twitter.com/widgets.js\";\n      fjs.parentNode.insertBefore(js, fjs);\n\n      t._e = [];\n      t.ready = function (f) {\n        t._e.push(f);\n      };\n\n      return t;\n    }(document, \"script\", \"twitter-wjs\"));\n  </script>\n<script src=\"https://code.jquery.com/jquery-2.1.3.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/fetch/2.0.3/fetch.min.js\"></script>\n<script>\n    // Use http or https based on location.protocol\n    var exampleText = $('#example').text()\n    $('#example').text(exampleText.replace('http:', location.protocol))\n\n    // Highlight result element\n    $('#result').each(function (i, block) {\n      hljs.highlightBlock(block);\n    });\n\n    // Run example\n    $('#run').click(function () {\n      var root = location.protocol + '//jsonplaceholder.typicode.com';\n      $.ajax({\n        url: root + '/posts/1',\n        method: 'GET'\n      }).then(function (data) {\n        var str = JSON.stringify(data, null, '\\t')\n        $('#result').html(\n          str.replace(/\\n/g, '<br/>')\n            .replace(/\\\\n/g, ' ')\n            .replace(/\\t/g, '&nbsp;&nbsp;')\n        );\n\n        $('#result').each(function (i, block) {\n          hljs.highlightBlock(block);\n        });\n      });\n    });\n  </script>\n</body>\n</html>", "requestCookiesRaw": "__cfduid=dc25336908c9394b4956b64fb0f8594591524473357", "requestMethod": "GET", "assertions": [], "responseCode": 200, "requestHeaders": {"User-Agent": "Apiritif"}, "requestCookiesSize": 52, "responseHeaders": {"Expect-CT": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"", "Via": "1.1 vegur", "X-Powered-By": "Express", "Transfer-Encoding": "chunked", "Set-Cookie": "__cfduid=dc25336908c9394b4956b64fb0f8594591524473357; expires=Tue, 23-Apr-19 08:49:17 GMT; path=/; domain=.typicode.com; HttpOnly", "CF-Cache-Status": "HIT", "Expires": "Mon, 23 Apr 2018 12:49:17 GMT", "Vary": "Origin, Accept-Encoding", "Server": "cloudflare", "Last-Modified": "Sun, 28 Jan 2018 23:17:34 GMT", "Connection": "keep-alive", "Cache-Control": "public, max-age=14400", "Date": "Mon, 23 Apr 2018 08:49:17 GMT", "Access-Control-Allow-Credentials": "true", "Content-Type": "text/html; charset=UTF-8", "CF-RAY": "40ff1374bd154e0c-DME"}, "requestSize": 0, "requestCookies": {"__cfduid": "dc25336908c9394b4956b64fb0f8594591524473357"}, "responseMessage": "OK"}}], "assertions": [], "duration": 0.19100689888000488, "path": [{"type": "package", "value": "tests"}, {"type": "module", "value": "test_transactions"}, {"type": "class", "value": "TestRequests"}, {"type": "method", "value": "test_1_single_request"}], "error_msg": null, "test_case": "test_1_single_request", "test_suite": "TestRequests", "extras": {"assertions": [], "file": "/home/dmand/src/apiritif/tests/test_transactions.py", "full_name": "tests.test_transactions.TestRequests.test_1_single_request", "description": null}}
{"status": "PASSED", "start_time": 1524473357.558203, "error_trace": null, "subsamples": [{"status": "PASSED", "start_time": 1524473357.578403, "error_trace": null, "subsamples": [], "assertions": [], "duration": 0.018172, "path": [{"type": "package", "value": "tests"}, {"type": "module", "value": "test_transactions"}, {"type": "class", "value": "TestRequests"}, {"type": "method", "value": "test_2_multiple_requests"}, {"type": "request", "value": "https://jsonplaceholder.typicode.com/"}], "error_msg": null, "test_case": "https://jsonplaceholder.typicode.com/", "test_suite": "test_2_multiple_requests", "extras": {"responseTime": 18, "responseHeadersSize": 661, "requestHeadersSize": 20, "responseSize": 6301, "latency": 18, "requestURI": "https://jsonplaceholder.typicode.com/", "responseBodySize": 6301, "connectTime": 0, "requestBodySize": 0, "requestBody": "", "responseBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>JSONPlaceholder - Fake online REST API for developers</title>\n<meta name=\"description\" content=\"Fake online REST API for developers\">\n<meta name=\"author\" content=\"Typicode\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/styles/github.min.css\">\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/highlight.min.js\"></script>\n<script>hljs.initHighlightingOnLoad();</script>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\">\n\n<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\n</head>\n<body>\n<header>\n<h1>\n<img src=\"http://i.imgur.com/QRlAg0b.png\">\n<br>JSONPlaceholder\n</h1>\n<p>\nFake Online REST API for Testing and Prototyping\n<br>\n<small>\npowered by\n<a href=\"https://github.com/typicode/json-server\">JSON Server</a>\nand\n<a href=\"https://github.com/typicode/lowdb\">lowdb</a>\n</small>\n</p>\n</header>\n<div class=\"see-also\">\n<div class=\"narrow\">\n<a href=\"https://cypress.io\" onclick=\"trackOutboundLink('https://cypress.io')\">\nSee also\n<img title=\"\" src=\"https://www.cypress.io/img/logo-dark.4e8064a6.png\" /> Fast, easy and reliable testing for anything that runs in a browser.</a>\n</div>\n</div>\n<div class=\"narrow\">\n\n<h2>Intro</h2>\n<p>\nJSONPlaceholder is a free online REST service that you can use whenever you need some fake data.\n</p>\n<p>\nIt's great for tutorials, faking a server, sharing code examples, ...\n</p>\n<h2>Example</h2>\n<p>\nRun this code in a console or from anywhere.\n<br> HTTP and HTTPS are both supported.\n</p>\n<pre><code id=\"example\" class=\"javascript\">fetch('https://jsonplaceholder.typicode.com/posts/1')\n  .then(response => response.json())\n  .then(json => console.log(json))\n</code></pre>\n<p>\n<button id=\"run\">Run</button>\n</p>\n<p id=\"result\" class=\"json\">// click the button above to make a request ;)</p>\n<h2>Resources</h2>\n<p>\nInspired by common use cases.\n</p>\n<table>\n<tr>\n<td>\n<a href=\"/posts\">/posts</a>\n</td>\n<td>100 items</td>\n</tr>\n<tr>\n<td>\n<a href=\"/comments\">/comments</a>\n</td>\n<td>500 items</td>\n</tr>\n<tr>\n<td>\n<a href=\"/albums\">/albums</a>\n</td>\n<td>100 items</td>\n</tr>\n<tr>\n<td>\n<a href=\"/photos\">/photos</a>\n</td>\n<td>5000 items</td>\n</tr>\n<tr>\n<td>\n<a href=\"/todos\">/todos</a>\n</td>\n<td>200 items</td>\n</tr>\n<tr>\n<td>\n<a href=\"/users\">/users</a>\n</td>\n<td>10 items</td>\n</tr>\n</table>\n<h2>Routes</h2>\n<p>\nAll HTTP verbs are supported.\n<br> View usage\n<a href=\"https://github.com/typicode/jsonplaceholder#how-to\">examples</a>.\n</p>\n<table>\n<tr>\n<td class=\"verb\">GET</td>\n<td>\n<a href=\"/posts\">/posts</a>\n</td>\n</tr>\n<tr>\n<td class=\"verb\">GET</td>\n<td>\n<a href=\"/posts/1\">/posts/1</a>\n</td>\n</tr>\n<tr>\n<td class=\"verb\">GET</td>\n<td>\n<a href=\"/posts/1/comments\">/posts/1/comments</a>\n</td>\n</tr>\n<tr>\n<td class=\"verb\">GET</td>\n<td>\n<a href=\"/comments?postId=1\">/comments?postId=1</a>\n</td>\n</tr>\n<tr>\n<td class=\"verb\">GET</td>\n<td>\n<a href=\"/posts?userId=1\">/posts?userId=1</a>\n</td>\n</tr>\n<tr>\n<td class=\"verb\">POST</td>\n<td>/posts</td>\n</tr>\n<tr>\n<td class=\"verb\">PUT</td>\n<td>/posts/1</td>\n</tr>\n<tr>\n<td class=\"verb\">PATCH</td>\n<td>/posts/1</td>\n</tr>\n<tr>\n<td class=\"verb\">DELETE</td>\n<td>/posts/1</td>\n</tr>\n</tr>\n</table>\n<h2>Use your OWN data</h2>\n<p>\n<a href=\"https://github.com/typicode/json-server\">JSON Server</a> powers this website. You can use it to create the same fake API in less than\n<strong>30 seconds</strong> with your own data.\n</p>\n<pre><code class=\"bash\">npm install -g json-server</code></pre>\n<p>Or you can try\n<a href=\"https://my-json-server.typicode.com\">My JSON Server</a> free service.</p>\n</div>\n<footer>\n<p>\nCoded and built with\n<i class=\"fa fa-heart\"></i>\nby\n<a href=\"https://github.com/typicode\">typicode</a>\n<br>Source code available on\n<a href=\"https://github.com/typicode/jsonplaceholder\">GitHub</a>\n<br> Support me on\n<a href=\"https://patreon.com/typicode\" onclick=\"trackOutboundLink('https://patreon.com/typicode')\">Patreon</a>\n</p>\n</footer>\n<div class=\"more\">\n</div>\n\n\n\n<script>\n    (function (i, s, o, g, r, a, m) {\n      i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {\n        (i[r].q = i[r].q || []).push(arguments)\n      }, i[r].l = 1 * new Date(); a = s.createElement(o), m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a,\n        m)\n    })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga'); ga('create', 'UA-44497010-1', 'typicode.com');\n    ga('send', 'pageview'); var trackOutboundLink = function (url) {\n      ga('send', 'event', 'outbound', 'click', url, {\n        'transport':\n          'beacon'\n      });\n    }\n  </script>\n<script>\n    window.twttr = (function (d, s, id) {\n      var js, fjs = d.getElementsByTagName(s)[0],\n        t = window.twttr || {};\n      if (d.getElementById(id)) return t;\n      js = d.createElement(s);\n      js.id = id;\n      js.src = \"https://platform.twitter.com/widgets.js\";\n      fjs.parentNode.insertBefore(js, fjs);\n\n      t._e = [];\n      t.ready = function (f) {\n        t._e.push(f);\n      };\n\n      return t;\n    }(document, \"script\", \"twitter-wjs\"));\n  </script>\n<script src=\"https://code.jquery.com/jquery-2.1.3.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/fetch/2.0.3/fetch.min.js\"></script>\n<script>\n    // Use http or https based on location.protocol\n    var exampleText = $('#example').text()\n    $('#example').text(exampleText.replace('http:', location.protocol))\n\n    // Highlight result element\n    $('#result').each(function (i, block) {\n      hljs.highlightBlock(block);\n    });\n\n    // Run example\n    $('#run').click(function () {\n      var root = location.protocol + '//jsonplaceholder.typicode.com';\n      $.ajax({\n        url: root + '/posts/1',\n        method: 'GET'\n      }).then(function (data) {\n        var str = JSON.stringify(data, null, '\\t')\n        $('#result').html(\n          str.replace(/\\n/g, '<br/>')\n            .replace(/\\\\n/g, ' ')\n            .replace(/\\t/g, '&nbsp;&nbsp;')\n        );\n\n        $('#result').each(function (i, block) {\n          hljs.highlightBlock(block);\n        });\n      });\n    });\n  </script>\n</body>\n</html>", "requestCookiesRaw": "__cfduid=dc25336908c9394b4956b64fb0f8594591524473357", "requestMethod": "GET", "assertions": [], "responseCode": 200, "requestHeaders": {"User-Agent": "Apiritif"}, "requestCookiesSize": 52, "responseHeaders": {"Expect-CT": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"", "Via": "1.1 vegur", "X-Powered-By": "Express", "Transfer-Encoding": "chunked", "Set-Cookie": "__cfduid=dc25336908c9394b4956b64fb0f8594591524473357; expires=Tue, 23-Apr-19 08:49:17 GMT; path=/; domain=.typicode.com; HttpOnly", "CF-Cache-Status": "HIT", "Expires": "Mon, 23 Apr 2018 12:49:17 GMT", "Vary": "Origin, Accept-Encoding", "Server": "cloudflare", "Last-Modified": "Sun, 28 Jan 2018 23:17:34 GMT", "Connection": "keep-alive", "Cache-Control": "public, max-age=14400", "Date": "Mon, 23 Apr 2018 08:49:17 GMT", "Access-Control-Allow-Credentials": "true", "Content-Type": "text/html; charset=UTF-8", "CF-RAY": "40ff1374dd244e0c-DME"}, "requestSize": 0, "requestCookies": {"__cfduid": "dc25336908c9394b4956b64fb0f8594591524473357"}, "responseMessage": "OK"}}, {"status": "PASSED", "start_time": 1524473357.957092, "error_trace": null, "subsamples": [], "assertions": [], "duration": 0.378188, "path": [{"type": "package", "value": "tests"}, {"type": "module", "value": "test_transactions"}, {"type": "class", "value": "TestRequests"}, {"type": "method", "value": "test_2_multiple_requests"}, {"type": "request", "value": "https://jsonplaceholder.typicode.com/2"}], "error_msg": null, "test_case": "https://jsonplaceholder.typicode.com/2", "test_suite": "test_2_multiple_requests", "extras": {"responseTime": 378, "responseHeadersSize": 707, "requestHeadersSize": 20, "responseSize": 2, "latency": 378, "requestURI": "https://jsonplaceholder.typicode.com/2", "responseBodySize": 2, "connectTime": 0, "requestBodySize": 0, "requestBody": "", "responseBody": "{}", "requestCookiesRaw": "__cfduid=dc25336908c9394b4956b64fb0f8594591524473357", "requestMethod": "GET", "assertions": [], "responseCode": 404, "requestHeaders": {"User-Agent": "Apiritif"}, "requestCookiesSize": 52, "responseHeaders": {"Expect-CT": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"", "Content-Length": "2", "Via": "1.1 vegur", "X-Content-Type-Options": "nosniff", "X-Powered-By": "Express", "Set-Cookie": "__cfduid=dc25336908c9394b4956b64fb0f8594591524473357; expires=Tue, 23-Apr-19 08:49:17 GMT; path=/; domain=.typicode.com; HttpOnly", "CF-Cache-Status": "EXPIRED", "Expires": "Mon, 23 Apr 2018 12:49:17 GMT", "Vary": "Origin, Accept-Encoding", "Server": "cloudflare", "Connection": "keep-alive", "Etag": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\"", "Pragma": "no-cache", "Cache-Control": "public, max-age=14400", "Date": "Mon, 23 Apr 2018 08:49:17 GMT", "Access-Control-Allow-Credentials": "true", "Content-Type": "application/json; charset=utf-8", "CF-RAY": "40ff1374fd2e4e0c-DME"}, "requestSize": 0, "requestCookies": {"__cfduid": "dc25336908c9394b4956b64fb0f8594591524473357"}, "responseMessage": "Not Found"}}], "assertions": [], "duration": 0.3989269733428955, "path": [{"type": "package", "value": "tests"}, {"type": "module", "value": "test_transactions"}, {"type": "class", "value": "TestRequests"}, {"type": "method", "value": "test_2_multiple_requests"}], "error_msg": null, "test_case": "test_2_multiple_requests", "test_suite": "TestRequests", "extras": {"assertions": [], "file": "/home/dmand/src/apiritif/tests/test_transactions.py", "full_name": "tests.test_transactions.TestRequests.test_2_multiple_requests", "description": null}}
{"status": "PASSED", "start_time": 1524473357.95782, "error_trace": null, "subsamples": [{"status": "PASSED", "start_time": 1524473357.957891, "error_trace": null, "subsamples": [{"status": "PASSED", "start_time": 1524473357.978153, "error_trace": null, "subsamples": [], "assertions": [], "duration": 0.018789, "path": [{"type": "package", "value": "tests"}, {"type": "module", "value": "test_transactions"}, {"type": "class", "value": "TestRequests"}, {"type": "method", "value": "test_3_toplevel_transaction"}, {"type": "transaction", "value": "Transaction"}, {"type": "request", "value": "https://jsonplaceholder.typicode.com/"}], "error_msg": null, "test_case": "https://jsonplaceholder.typicode.com/", "test_suite": "Transaction", "extras": {"responseTime": 18, "responseHeadersSize": 661, "requestHeadersSize": 20, "responseSize": 6301, "latency": 18, "requestURI": "https://jsonplaceholder.typicode.com/", "responseBodySize": 6301, "connectTime": 0, "requestBodySize": 0, "requestBody": "", "responseBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>JSONPlaceholder - Fake online REST API for developers</title>\n<meta name=\"description\" content=\"Fake online REST API for developers\">\n<meta name=\"author\" content=\"Typicode\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/styles/github.min.css\">\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/highlight.min.js\"></script>\n<script>hljs.initHighlightingOnLoad();</script>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\">\n\n<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\n</head>\n<body>\n<header>\n<h1>\n<img src=\"http://i.imgur.com/QRlAg0b.png\">\n<br>JSONPlaceholder\n</h1>\n<p>\nFake Online REST API for Testing and Prototyping\n<br>\n<small>\npowered by\n<a href=\"https://github.com/typicode/json-server\">JSON Server</a>\nand\n<a href=\"https://github.com/typicode/lowdb\">lowdb</a>\n</small>\n</p>\n</header>\n<div class=\"see-also\">\n<div class=\"narrow\">\n<a href=\"https://cypress.io\" onclick=\"trackOutboundLink('https://cypress.io')\">\nSee also\n<img title=\"\" src=\"https://www.cypress.io/img/logo-dark.4e8064a6.png\" /> Fast, easy and reliable testing for anything that runs in a browser.</a>\n</div>\n</div>\n<div class=\"narrow\">\n\n<h2>Intro</h2>\n<p>\nJSONPlaceholder is a free online REST service that you can use whenever you need some fake data.\n</p>\n<p>\nIt's great for tutorials, faking a server, sharing code examples, ...\n</p>\n<h2>Example</h2>\n<p>\nRun this code in a console or from anywhere.\n<br> HTTP and HTTPS are both supported.\n</p>\n<pre><code id=\"example\" class=\"javascript\">fetch('https://jsonplaceholder.typicode.com/posts/1')\n  .then(response => response.json())\n  .then(json => console.log(json))\n</code></pre>\n<p>\n<button id=\"run\">Run</button>\n</p>\n<p id=\"result\" class=\"json\">// click the button above to make a request ;)</p>\n<h2>Resources</h2>\n<p>\nInspired by common use cases.\n</p>\n<table>\n<tr>\n<td>\n<a href=\"/posts\">/posts</a>\n</td>\n<td>100 items</td>\n</tr>\n<tr>\n<td>\n<a href=\"/comments\">/comments</a>\n</td>\n<td>500 items</td>\n</tr>\n<tr>\n<td>\n<a href=\"/albums\">/albums</a>\n</td>\n<td>100 items</td>\n</tr>\n<tr>\n<td>\n<a href=\"/photos\">/photos</a>\n</td>\n<td>5000 items</td>\n</tr>\n<tr>\n<td>\n<a href=\"/todos\">/todos</a>\n</td>\n<td>200 items</td>\n</tr>\n<tr>\n<td>\n<a href=\"/users\">/users</a>\n</td>\n<td>10 items</td>\n</tr>\n</table>\n<h2>Routes</h2>\n<p>\nAll HTTP verbs are supported.\n<br> View usage\n<a href=\"https://github.com/typicode/jsonplaceholder#how-to\">examples</a>.\n</p>\n<table>\n<tr>\n<td class=\"verb\">GET</td>\n<td>\n<a href=\"/posts\">/posts</a>\n</td>\n</tr>\n<tr>\n<td class=\"verb\">GET</td>\n<td>\n<a href=\"/posts/1\">/posts/1</a>\n</td>\n</tr>\n<tr>\n<td class=\"verb\">GET</td>\n<td>\n<a href=\"/posts/1/comments\">/posts/1/comments</a>\n</td>\n</tr>\n<tr>\n<td class=\"verb\">GET</td>\n<td>\n<a href=\"/comments?postId=1\">/comments?postId=1</a>\n</td>\n</tr>\n<tr>\n<td class=\"verb\">GET</td>\n<td>\n<a href=\"/posts?userId=1\">/posts?userId=1</a>\n</td>\n</tr>\n<tr>\n<td class=\"verb\">POST</td>\n<td>/posts</td>\n</tr>\n<tr>\n<td class=\"verb\">PUT</td>\n<td>/posts/1</td>\n</tr>\n<tr>\n<td class=\"verb\">PATCH</td>\n<td>/posts/1</td>\n</tr>\n<tr>\n<td class=\"verb\">DELETE</td>\n<td>/posts/1</td>\n</tr>\n</tr>\n</table>\n<h2>Use your OWN data</h2>\n<p>\n<a href=\"https://github.com/typicode/json-server\">JSON Server</a> powers this website. You can use it to create the same fake API in less than\n<strong>30 seconds</strong> with your own data.\n</p>\n<pre><code class=\"bash\">npm install -g json-server</code></pre>\n<p>Or you can try\n<a href=\"https://my-json-server.typicode.com\">My JSON Server</a> free service.</p>\n</div>\n<footer>\n<p>\nCoded and built with\n<i class=\"fa fa-heart\"></i>\nby\n<a href=\"https://github.com/typicode\">typicode</a>\n<br>Source code available on\n<a href=\"https://github.com/typicode/jsonplaceholder\">GitHub</a>\n<br> Support me on\n<a href=\"https://patreon.com/typicode\" onclick=\"trackOutboundLink('https://patreon.com/typicode')\">Patreon</a>\n</p>\n</footer>\n<div class=\"more\">\n</div>\n\n\n\n<script>\n    (function (i, s, o, g, r, a, m) {\n      i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {\n        (i[r].q = i[r].q || []).push(arguments)\n      }, i[r].l = 1 * new Date(); a = s.createElement(o), m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a,\n        m)\n    })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga'); ga('create', 'UA-44497010-1', 'typicode.com');\n    ga('send', 'pageview'); var trackOutboundLink = function (url) {\n      ga('send', 'event', 'outbound', 'click', url, {\n        'transport':\n          'beacon'\n      });\n    }\n  </script>\n<script>\n    window.twttr = (function (d, s, id) {\n      var js, fjs = d.getElementsByTagName(s)[0],\n        t = window.twttr || {};\n      if (d.getElementById(id)) return t;\n      js = d.createElement(s);\n      js.id = id;\n      js.src = \"https://platform.twitter.com/widgets.js\";\n      fjs.parentNode.insertBefore(js, fjs);\n\n      t._e = [];\n      t.ready = function (f) {\n        t._e.push(f);\n      };\n\n      return t;\n    }(document, \"script\", \"twitter-wjs\"));\n  </script>\n<script src=\"https://code.jquery.com/jquery-2.1.3.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/fetch/2.0.3/fetch.min.js\"></script>\n<script>\n    // Use http or https based on location.protocol\n    var exampleText = $('#example').text()\n    $('#example').text(exampleText.replace('http:', location.protocol))\n\n    // Highlight result element\n    $('#result').each(function (i, block) {\n      hljs.highlightBlock(block);\n    });\n\n    // Run example\n    $('#run').click(function () {\n      var root = location.protocol + '//jsonplaceholder.typicode.com';\n      $.ajax({\n        url: root + '/posts/1',\n        method: 'GET'\n      }).then(function (data) {\n        var str = JSON.stringify(data, null, '\\t')\n        $('#result').html(\n          str.replace(/\\n/g, '<br/>')\n            .replace(/\\\\n/g, ' ')\n            .replace(/\\t/g, '&nbsp;&nbsp;')\n        );\n\n        $('#result').each(function (i, block) {\n          hljs.highlightBlock(block);\n        });\n      });\n    });\n  </script>\n</body>\n</html>", "requestCookiesRaw": "__cfduid=dc25336908c9394b4956b64fb0f8594591524473357", "requestMethod": "GET", "assertions": [], "responseCode": 200, "requestHeaders": {"User-Agent": "Apiritif"}, "requestCookiesSize": 52, "responseHeaders": {"Expect-CT": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"", "Via": "1.1 vegur", "X-Powered-By": "Express", "Transfer-Encoding": "chunked", "Set-Cookie": "__cfduid=dc25336908c9394b4956b64fb0f8594591524473357; expires=Tue, 23-Apr-19 08:49:17 GMT; path=/; domain=.typicode.com; HttpOnly", "CF-Cache-Status": "HIT", "Expires": "Mon, 23 Apr 2018 12:49:17 GMT", "Vary": "Origin, Accept-Encoding", "Server": "cloudflare", "Last-Modified": "Sun, 28 Jan 2018 23:17:34 GMT", "Connection": "keep-alive", "Cache-Control": "public, max-age=14400", "Date": "Mon, 23 Apr 2018 08:49:17 GMT", "Access-Control-Allow-Credentials": "true", "Content-Type": "text/html; charset=UTF-8", "CF-RAY": "40ff13775df14e0c-DME"}, "requestSize": 0, "requestCookies": {"__cfduid": "dc25336908c9394b4956b64fb0f8594591524473357"}, "responseMessage": "OK"}}, {"status": "PASSED", "start_time": 1524473357.99819, "error_trace": null, "subsamples": [], "assertions": [], "duration": 0.019595, "path": [{"type": "package", "value": "tests"}, {"type": "module", "value": "test_transactions"}, {"type": "class", "value": "TestRequests"}, {"type": "method", "value": "test_3_toplevel_transaction"}, {"type": "transaction", "value": "Transaction"}, {"type": "request", "value": "https://jsonplaceholder.typicode.com/2"}], "error_msg": null, "test_case": "https://jsonplaceholder.typicode.com/2", "test_suite": "Transaction", "extras": {"responseTime": 19, "responseHeadersSize": 703, "requestHeadersSize": 20, "responseSize": 2, "latency": 19, "requestURI": "https://jsonplaceholder.typicode.com/2", "responseBodySize": 2, "connectTime": 0, "requestBodySize": 0, "requestBody": "", "responseBody": "{}", "requestCookiesRaw": "__cfduid=dc25336908c9394b4956b64fb0f8594591524473357", "requestMethod": "GET", "assertions": [], "responseCode": 404, "requestHeaders": {"User-Agent": "Apiritif"}, "requestCookiesSize": 52, "responseHeaders": {"Expect-CT": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"", "Content-Length": "2", "Via": "1.1 vegur", "X-Content-Type-Options": "nosniff", "X-Powered-By": "Express", "Set-Cookie": "__cfduid=dc25336908c9394b4956b64fb0f8594591524473357; expires=Tue, 23-Apr-19 08:49:17 GMT; path=/; domain=.typicode.com; HttpOnly", "CF-Cache-Status": "HIT", "Expires": "Mon, 23 Apr 2018 12:49:17 GMT", "Vary": "Origin, Accept-Encoding", "Server": "cloudflare", "Connection": "keep-alive", "Etag": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\"", "Pragma": "no-cache", "Cache-Control": "public, max-age=14400", "Date": "Mon, 23 Apr 2018 08:49:17 GMT", "Access-Control-Allow-Credentials": "true", "Content-Type": "application/json; charset=utf-8", "CF-RAY": "40ff13777e034e0c-DME"}, "requestSize": 0, "requestCookies": {"__cfduid": "dc25336908c9394b4956b64fb0f8594591524473357"}, "responseMessage": "Not Found"}}], "assertions": [], "duration": 0.04031205177307129, "path": [{"type": "package", "value": "tests"}, {"type": "module", "value": "test_transactions"}, {"type": "class", "value": "TestRequests"}, {"type": "method", "value": "test_3_toplevel_transaction"}, {"type": "transaction", "value": "Transaction"}], "error_msg": null, "test_case": "Transaction", "test_suite": "test_3_toplevel_transaction", "extras": {"responseTime": 40, "responseHeadersSize": 20, "requestHeadersSize": 20, "responseSize": 2, "latency": 40, "requestURI": "Transaction", "responseBodySize": 2, "connectTime": 0, "requestBodySize": 0, "requestBody": "", "responseBody": "{}", "requestCookiesRaw": "__cfduid=dc25336908c9394b4956b64fb0f8594591524473357", "requestMethod": "GET", "assertions": [], "responseCode": 404, "requestHeaders": {"User-Agent": "Apiritif"}, "requestCookiesSize": 52, "responseHeaders": {"User-Agent": "Apiritif"}, "requestSize": 0, "requestCookies": {"__cfduid": "dc25336908c9394b4956b64fb0f8594591524473357"}, "responseMessage": "Not Found"}}], "assertions": [], "duration": 0.040411949157714844, "path": [{"type": "package", "value": "tests"}, {"type": "module", "value": "test_transactions"}, {"type": "class", "value": "TestRequests"}, {"type": "method", "value": "test_3_toplevel_transaction"}], "error_msg": null, "test_case": "test_3_toplevel_transaction", "test_suite": "TestRequests", "extras": {"assertions": [], "file": "/home/dmand/src/apiritif/tests/test_transactions.py", "full_name": "tests.test_transactions.TestRequests.test_3_toplevel_transaction", "description": null}}
{"status": "PASSED", "start_time": 1524473357.998822, "error_trace": null, "subsamples": [{"status": "PASSED", "start_time": 1524473358.017498, "error_trace": null, "subsamples": [], "assertions": [], "duration": 0.018039, "path": [{"type": "package", "value": "tests"}, {"type": "module", "value": "test_transactions"}, {"type": "class", "value": "TestRequests"}, {"type": "method", "value": "test_4_mixed_transaction"}, {"type": "request", "value": "https://jsonplaceholder.typicode.com/"}], "error_msg": null, "test_case": "https://jsonplaceholder.typicode.com/", "test_suite": "test_4_mixed_transaction", "extras": {"responseTime": 18, "responseHeadersSize": 661, "requestHeadersSize": 20, "responseSize": 6301, "latency": 18, "requestURI": "https://jsonplaceholder.typicode.com/", "responseBodySize": 6301, "connectTime": 0, "requestBodySize": 0, "requestBody": "", "responseBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>JSONPlaceholder - Fake online REST API for developers</title>\n<meta name=\"description\" content=\"Fake online REST API for developers\">\n<meta name=\"author\" content=\"Typicode\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/styles/github.min.css\">\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/highlight.min.js\"></script>\n<script>hljs.initHighlightingOnLoad();</script>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\">\n\n<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\n</head>\n<body>\n<header>\n<h1>\n<img src=\"http://i.imgur.com/QRlAg0b.png\">\n<br>JSONPlaceholder\n</h1>\n<p>\nFake Online REST API for Testing and Prototyping\n<br>\n<small>\npowered by\n<a href=\"https://github.com/typicode/json-server\">JSON Server</a>\nand\n<a href=\"https://github.com/typicode/lowdb\">lowdb</a>\n</small>\n</p>\n</header>\n<div class=\"see-also\">\n<div class=\"narrow\">\n<a href=\"https://cypress.io\" onclick=\"trackOutboundLink('https://cypress.io')\">\nSee also\n<img title=\"\" src=\"https://www.cypress.io/img/logo-dark.4e8064a6.png\" /> Fast, easy and reliable testing for anything that runs in a browser.</a>\n</div>\n</div>\n<div class=\"narrow\">\n\n<h2>Intro</h2>\n<p>\nJSONPlaceholder is a free online REST service that you can use whenever you need some fake data.\n</p>\n<p>\nIt's great for tutorials, faking a server, sharing code examples, ...\n</p>\n<h2>Example</h2>\n<p>\nRun this code in a console or from anywhere.\n<br> HTTP and HTTPS are both supported.\n</p>\n<pre><code id=\"example\" class=\"javascript\">fetch('https://jsonplaceholder.typicode.com/posts/1')\n  .then(response => response.json())\n  .then(json => console.log(json))\n</code></pre>\n<p>\n<button id=\"run\">Run</button>\n</p>\n<p id=\"result\" class=\"json\">// click the button above to make a request ;)</p>\n<h2>Resources</h2>\n<p>\nInspired by common use cases.\n</p>\n<table>\n<tr>\n<td>\n<a href=\"/posts\">/posts</a>\n</td>\n<td>100 items</td>\n</tr>\n<tr>\n<td>\n<a href=\"/comments\">/comments</a>\n</td>\n<td>500 items</td>\n</tr>\n<tr>\n<td>\n<a href=\"/albums\">/albums</a>\n</td>\n<td>100 items</td>\n</tr>\n<tr>\n<td>\n<a href=\"/photos\">/photos</a>\n</td>\n<td>5000 items</td>\n</tr>\n<tr>\n<td>\n<a href=\"/todos\">/todos</a>\n</td>\n<td>200 items</td>\n</tr>\n<tr>\n<td>\n<a href=\"/users\">/users</a>\n</td>\n<td>10 items</td>\n</tr>\n</table>\n<h2>Routes</h2>\n<p>\nAll HTTP verbs are supported.\n<br> View usage\n<a href=\"https://github.com/typicode/jsonplaceholder#how-to\">examples</a>.\n</p>\n<table>\n<tr>\n<td class=\"verb\">GET</td>\n<td>\n<a href=\"/posts\">/posts</a>\n</td>\n</tr>\n<tr>\n<td class=\"verb\">GET</td>\n<td>\n<a href=\"/posts/1\">/posts/1</a>\n</td>\n</tr>\n<tr>\n<td class=\"verb\">GET</td>\n<td>\n<a href=\"/posts/1/comments\">/posts/1/comments</a>\n</td>\n</tr>\n<tr>\n<td class=\"verb\">GET</td>\n<td>\n<a href=\"/comments?postId=1\">/comments?postId=1</a>\n</td>\n</tr>\n<tr>\n<td class=\"verb\">GET</td>\n<td>\n<a href=\"/posts?userId=1\">/posts?userId=1</a>\n</td>\n</tr>\n<tr>\n<td class=\"verb\">POST</td>\n<td>/posts</td>\n</tr>\n<tr>\n<td class=\"verb\">PUT</td>\n<td>/posts/1</td>\n</tr>\n<tr>\n<td class=\"verb\">PATCH</td>\n<td>/posts/1</td>\n</tr>\n<tr>\n<td class=\"verb\">DELETE</td>\n<td>/posts/1</td>\n</tr>\n</tr>\n</table>\n<h2>Use your OWN data</h2>\n<p>\n<a href=\"https://github.com/typicode/json-server\">JSON Server</a> powers this website. You can use it to create the same fake API in less than\n<strong>30 seconds</strong> with your own data.\n</p>\n<pre><code class=\"bash\">npm install -g json-server</code></pre>\n<p>Or you can try\n<a href=\"https://my-json-server.typicode.com\">My JSON Server</a> free service.</p>\n</div>\n<footer>\n<p>\nCoded and built with\n<i class=\"fa fa-heart\"></i>\nby\n<a href=\"https://github.com/typicode\">typicode</a>\n<br>Source code available on\n<a href=\"https://github.com/typicode/jsonplaceholder\">GitHub</a>\n<br> Support me on\n<a href=\"https://patreon.com/typicode\" onclick=\"trackOutboundLink('https://patreon.com/typicode')\">Patreon</a>\n</p>\n</footer>\n<div class=\"more\">\n</div>\n\n\n\n<script>\n    (function (i, s, o, g, r, a, m) {\n      i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {\n        (i[r].q = i[r].q || []).push(arguments)\n      }, i[r].l = 1 * new Date(); a = s.createElement(o), m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a,\n        m)\n    })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga'); ga('create', 'UA-44497010-1', 'typicode.com');\n    ga('send', 'pageview'); var trackOutboundLink = function (url) {\n      ga('send', 'event', 'outbound', 'click', url, {\n        'transport':\n          'beacon'\n      });\n    }\n  </script>\n<script>\n    window.twttr = (function (d, s, id) {\n      var js, fjs = d.getElementsByTagName(s)[0],\n        t = window.twttr || {};\n      if (d.getElementById(id)) return t;\n      js = d.createElement(s);\n      js.id = id;\n      js.src = \"https://platform.twitter.com/widgets.js\";\n      fjs.parentNode.insertBefore(js, fjs);\n\n      t._e = [];\n      t.ready = function (f) {\n        t._e.push(f);\n      };\n\n      return t;\n    }(document, \"script\", \"twitter-wjs\"));\n  </script>\n<script src=\"https://code.jquery.com/jquery-2.1.3.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/fetch/2.0.3/fetch.min.js\"></script>\n<script>\n    // Use http or https based on location.protocol\n    var exampleText = $('#example').text()\n    $('#example').text(exampleText.replace('http:', location.protocol))\n\n    // Highlight result element\n    $('#result').each(function (i, block) {\n      hljs.highlightBlock(block);\n    });\n\n    // Run example\n    $('#run').click(function () {\n      var root = location.protocol + '//jsonplaceholder.typicode.com';\n      $.ajax({\n        url: root + '/posts/1',\n        method: 'GET'\n      }).then(function (data) {\n        var str = JSON.stringify(data, null, '\\t')\n        $('#result').html(\n          str.replace(/\\n/g, '<br/>')\n            .replace(/\\\\n/g, ' ')\n            .replace(/\\t/g, '&nbsp;&nbsp;')\n        );\n\n        $('#result').each(function (i, block) {\n          hljs.highlightBlock(block);\n        });\n      });\n    });\n  </script>\n</body>\n</html>", "requestCookiesRaw": "__cfduid=d57ed9f4c67ff93c5e70288846dd719e61524473358", "requestMethod": "GET", "assertions": [], "responseCode": 200, "requestHeaders": {"User-Agent": "Apiritif"}, "requestCookiesSize": 52, "responseHeaders": {"Expect-CT": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"", "Via": "1.1 vegur", "X-Powered-By": "Express", "Transfer-Encoding": "chunked", "Set-Cookie": "__cfduid=d57ed9f4c67ff93c5e70288846dd719e61524473358; expires=Tue, 23-Apr-19 08:49:18 GMT; path=/; domain=.typicode.com; HttpOnly", "CF-Cache-Status": "HIT", "Expires": "Mon, 23 Apr 2018 12:49:18 GMT", "Vary": "Origin, Accept-Encoding", "Server": "cloudflare", "Last-Modified": "Sun, 28 Jan 2018 23:17:34 GMT", "Connection": "keep-alive", "Cache-Control": "public, max-age=14400", "Date": "Mon, 23 Apr 2018 08:49:18 GMT", "Access-Control-Allow-Credentials": "true", "Content-Type": "text/html; charset=UTF-8", "CF-RAY": "40ff13779e214e0c-DME"}, "requestSize": 0, "requestCookies": {"__cfduid": "d57ed9f4c67ff93c5e70288846dd719e61524473358"}, "responseMessage": "OK"}}, {"status": "PASSED", "start_time": 1524473358.01751, "error_trace": null, "subsamples": [{"status": "PASSED", "start_time": 1524473358.035589, "error_trace": null, "subsamples": [], "assertions": [], "duration": 0.017642, "path": [{"type": "package", "value": "tests"}, {"type": "module", "value": "test_transactions"}, {"type": "class", "value": "TestRequests"}, {"type": "method", "value": "test_4_mixed_transaction"}, {"type": "transaction", "value": "Transaction"}, {"type": "request", "value": "https://jsonplaceholder.typicode.com/2"}], "error_msg": null, "test_case": "https://jsonplaceholder.typicode.com/2", "test_suite": "Transaction", "extras": {"responseTime": 17, "responseHeadersSize": 703, "requestHeadersSize": 20, "responseSize": 2, "latency": 17, "requestURI": "https://jsonplaceholder.typicode.com/2", "responseBodySize": 2, "connectTime": 0, "requestBodySize": 0, "requestBody": "", "responseBody": "{}", "requestCookiesRaw": "__cfduid=d57ed9f4c67ff93c5e70288846dd719e61524473358", "requestMethod": "GET", "assertions": [], "responseCode": 404, "requestHeaders": {"User-Agent": "Apiritif"}, "requestCookiesSize": 52, "responseHeaders": {"Expect-CT": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"", "Content-Length": "2", "Via": "1.1 vegur", "X-Content-Type-Options": "nosniff", "X-Powered-By": "Express", "Set-Cookie": "__cfduid=d57ed9f4c67ff93c5e70288846dd719e61524473358; expires=Tue, 23-Apr-19 08:49:18 GMT; path=/; domain=.typicode.com; HttpOnly", "CF-Cache-Status": "HIT", "Expires": "Mon, 23 Apr 2018 12:49:18 GMT", "Vary": "Origin, Accept-Encoding", "Server": "cloudflare", "Connection": "keep-alive", "Etag": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\"", "Pragma": "no-cache", "Cache-Control": "public, max-age=14400", "Date": "Mon, 23 Apr 2018 08:49:18 GMT", "Access-Control-Allow-Credentials": "true", "Content-Type": "application/json; charset=utf-8", "CF-RAY": "40ff1377be294e0c-DME"}, "requestSize": 0, "requestCookies": {"__cfduid": "d57ed9f4c67ff93c5e70288846dd719e61524473358"}, "responseMessage": "Not Found"}}], "assertions": [], "duration": 0.01809215545654297, "path": [{"type": "package", "value": "tests"}, {"type": "module", "value": "test_transactions"}, {"type": "class", "value": "TestRequests"}, {"type": "method", "value": "test_4_mixed_transaction"}, {"type": "transaction", "value": "Transaction"}], "error_msg": null, "test_case": "Transaction", "test_suite": "test_4_mixed_transaction", "extras": {"responseTime": 18, "responseHeadersSize": 20, "requestHeadersSize": 20, "responseSize": 2, "latency": 18, "requestURI": "Transaction", "responseBodySize": 2, "connectTime": 0, "requestBodySize": 0, "requestBody": "", "responseBody": "{}", "requestCookiesRaw": "__cfduid=d57ed9f4c67ff93c5e70288846dd719e61524473358", "requestMethod": "GET", "assertions": [], "responseCode": 404, "requestHeaders": {"User-Agent": "Apiritif"}, "requestCookiesSize": 52, "responseHeaders": {"User-Agent": "Apiritif"}, "requestSize": 0, "requestCookies": {"__cfduid": "d57ed9f4c67ff93c5e70288846dd719e61524473358"}, "responseMessage": "Not Found"}}], "assertions": [], "duration": 0.03680610656738281, "path": [{"type": "package", "value": "tests"}, {"type": "module", "value": "test_transactions"}, {"type": "class", "value": "TestRequests"}, {"type": "method", "value": "test_4_mixed_transaction"}], "error_msg": null, "test_case": "test_4_mixed_transaction", "test_suite": "TestRequests", "extras": {"assertions": [], "file": "/home/dmand/src/apiritif/tests/test_transactions.py", "full_name": "tests.test_transactions.TestRequests.test_4_mixed_transaction", "description": null}}
{"status": "PASSED", "start_time": 1524473358.036187, "error_trace": null, "subsamples": [{"status": "PASSED", "start_time": 1524473358.036238, "error_trace": null, "subsamples": [{"status": "PASSED", "start_time": 1524473358.055563, "error_trace": null, "subsamples": [], "assertions": [], "duration": 0.017805, "path": [{"type": "package", "value": "tests"}, {"type": "module", "value": "test_transactions"}, {"type": "class", "value": "TestRequests"}, {"type": "method", "value": "test_5_multiple_transactions"}, {"type": "transaction", "value": "Transaction 1"}, {"type": "request", "value": "https://jsonplaceholder.typicode.com/"}], "error_msg": null, "test_case": "https://jsonplaceholder.typicode.com/", "test_suite": "Transaction 1", "extras": {"responseTime": 17, "responseHeadersSize": 661, "requestHeadersSize": 20, "responseSize": 6301, "latency": 17, "requestURI": "https://jsonplaceholder.typicode.com/", "responseBodySize": 6301, "connectTime": 0, "requestBodySize": 0, "requestBody": "", "responseBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>JSONPlaceholder - Fake online REST API for developers</title>\n<meta name=\"description\" content=\"Fake online REST API for developers\">\n<meta name=\"author\" content=\"Typicode\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/styles/github.min.css\">\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/highlight.min.js\"></script>\n<script>hljs.initHighlightingOnLoad();</script>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\">\n\n<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\n</head>\n<body>\n<header>\n<h1>\n<img src=\"http://i.imgur.com/QRlAg0b.png\">\n<br>JSONPlaceholder\n</h1>\n<p>\nFake Online REST API for Testing and Prototyping\n<br>\n<small>\npowered by\n<a href=\"https://github.com/typicode/json-server\">JSON Server</a>\nand\n<a href=\"https://github.com/typicode/lowdb\">lowdb</a>\n</small>\n</p>\n</header>\n<div class=\"see-also\">\n<div class=\"narrow\">\n<a href=\"https://cypress.io\" onclick=\"trackOutboundLink('https://cypress.io')\">\nSee also\n<img title=\"\" src=\"https://www.cypress.io/img/logo-dark.4e8064a6.png\" /> Fast, easy and reliable testing for anything that runs in a browser.</a>\n</div>\n</div>\n<div class=\"narrow\">\n\n<h2>Intro</h2>\n<p>\nJSONPlaceholder is a free online REST service that you can use whenever you need some fake data.\n</p>\n<p>\nIt's great for tutorials, faking a server, sharing code examples, ...\n</p>\n<h2>Example</h2>\n<p>\nRun this code in a console or from anywhere.\n<br> HTTP and HTTPS are both supported.\n</p>\n<pre><code id=\"example\" class=\"javascript\">fetch('https://jsonplaceholder.typicode.com/posts/1')\n  .then(response => response.json())\n  .then(json => console.log(json))\n</code></pre>\n<p>\n<button id=\"run\">Run</button>\n</p>\n<p id=\"result\" class=\"json\">// click the button above to make a request ;)</p>\n<h2>Resources</h2>\n<p>\nInspired by common use cases.\n</p>\n<table>\n<tr>\n<td>\n<a href=\"/posts\">/posts</a>\n</td>\n<td>100 items</td>\n</tr>\n<tr>\n<td>\n<a href=\"/comments\">/comments</a>\n</td>\n<td>500 items</td>\n</tr>\n<tr>\n<td>\n<a href=\"/albums\">/albums</a>\n</td>\n<td>100 items</td>\n</tr>\n<tr>\n<td>\n<a href=\"/photos\">/photos</a>\n</td>\n<td>5000 items</td>\n</tr>\n<tr>\n<td>\n<a href=\"/todos\">/todos</a>\n</td>\n<td>200 items</td>\n</tr>\n<tr>\n<td>\n<a href=\"/users\">/users</a>\n</td>\n<td>10 items</td>\n</tr>\n</table>\n<h2>Routes</h2>\n<p>\nAll HTTP verbs are supported.\n<br> View usage\n<a href=\"https://github.com/typicode/jsonplaceholder#how-to\">examples</a>.\n</p>\n<table>\n<tr>\n<td class=\"verb\">GET</td>\n<td>\n<a href=\"/posts\">/posts</a>\n</td>\n</tr>\n<tr>\n<td class=\"verb\">GET</td>\n<td>\n<a href=\"/posts/1\">/posts/1</a>\n</td>\n</tr>\n<tr>\n<td class=\"verb\">GET</td>\n<td>\n<a href=\"/posts/1/comments\">/posts/1/comments</a>\n</td>\n</tr>\n<tr>\n<td class=\"verb\">GET</td>\n<td>\n<a href=\"/comments?postId=1\">/comments?postId=1</a>\n</td>\n</tr>\n<tr>\n<td class=\"verb\">GET</td>\n<td>\n<a href=\"/posts?userId=1\">/posts?userId=1</a>\n</td>\n</tr>\n<tr>\n<td class=\"verb\">POST</td>\n<td>/posts</td>\n</tr>\n<tr>\n<td class=\"verb\">PUT</td>\n<td>/posts/1</td>\n</tr>\n<tr>\n<td class=\"verb\">PATCH</td>\n<td>/posts/1</td>\n</tr>\n<tr>\n<td class=\"verb\">DELETE</td>\n<td>/posts/1</td>\n</tr>\n</tr>\n</table>\n<h2>Use your OWN data</h2>\n<p>\n<a href=\"https://github.com/typicode/json-server\">JSON Server</a> powers this website. You can use it to create the same fake API in less than\n<strong>30 seconds</strong> with your own data.\n</p>\n<pre><code class=\"bash\">npm install -g json-server</code></pre>\n<p>Or you can try\n<a href=\"https://my-json-server.typicode.com\">My JSON Server</a> free service.</p>\n</div>\n<footer>\n<p>\nCoded and built with\n<i class=\"fa fa-heart\"></i>\nby\n<a href=\"https://github.com/typicode\">typicode</a>\n<br>Source code available on\n<a href=\"https://github.com/typicode/jsonplaceholder\">GitHub</a>\n<br> Support me on\n<a href=\"https://patreon.com/typicode\" onclick=\"trackOutboundLink('https://patreon.com/typicode')\">Patreon</a>\n</p>\n</footer>\n<div class=\"more\">\n</div>\n\n\n\n<script>\n    (function (i, s, o, g, r, a, m) {\n      i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {\n        (i[r].q = i[r].q || []).push(arguments)\n      }, i[r].l = 1 * new Date(); a = s.createElement(o), m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a,\n        m)\n    })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga'); ga('create', 'UA-44497010-1', 'typicode.com');\n    ga('send', 'pageview'); var trackOutboundLink = function (url) {\n      ga('send', 'event', 'outbound', 'click', url, {\n        'transport':\n          'beacon'\n      });\n    }\n  </script>\n<script>\n    window.twttr = (function (d, s, id) {\n      var js, fjs = d.getElementsByTagName(s)[0],\n        t = window.twttr || {};\n      if (d.getElementById(id)) return t;\n      js = d.createElement(s);\n      js.id = id;\n      js.src = \"https://platform.twitter.com/widgets.js\";\n      fjs.parentNode.insertBefore(js, fjs);\n\n      t._e = [];\n      t.ready = function (f) {\n        t._e.push(f);\n      };\n\n      return t;\n    }(document, \"script\", \"twitter-wjs\"));\n  </script>\n<script src=\"https://code.jquery.com/jquery-2.1.3.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/fetch/2.0.3/fetch.min.js\"></script>\n<script>\n    // Use http or https based on location.protocol\n    var exampleText = $('#example').text()\n    $('#example').text(exampleText.replace('http:', location.protocol))\n\n    // Highlight result element\n    $('#result').each(function (i, block) {\n      hljs.highlightBlock(block);\n    });\n\n    // Run example\n    $('#run').click(function () {\n      var root = location.protocol + '//jsonplaceholder.typicode.com';\n      $.ajax({\n        url: root + '/posts/1',\n        method: 'GET'\n      }).then(function (data) {\n        var str = JSON.stringify(data, null, '\\t')\n        $('#result').html(\n          str.replace(/\\n/g, '<br/>')\n            .replace(/\\\\n/g, ' ')\n            .replace(/\\t/g, '&nbsp;&nbsp;')\n        );\n\n        $('#result').each(function (i, block) {\n          hljs.highlightBlock(block);\n        });\n      });\n    });\n  </script>\n</body>\n</html>", "requestCookiesRaw": "__cfduid=d57ed9f4c67ff93c5e70288846dd719e61524473358", "requestMethod": "GET", "assertions": [], "responseCode": 200, "requestHeaders": {"User-Agent": "Apiritif"}, "requestCookiesSize": 52, "responseHeaders": {"Expect-CT": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"", "Via": "1.1 vegur", "X-Powered-By": "Express", "Transfer-Encoding": "chunked", "Set-Cookie": "__cfduid=d57ed9f4c67ff93c5e70288846dd719e61524473358; expires=Tue, 23-Apr-19 08:49:18 GMT; path=/; domain=.typicode.com; HttpOnly", "CF-Cache-Status": "HIT", "Expires": "Mon, 23 Apr 2018 12:49:18 GMT", "Vary": "Origin, Accept-Encoding", "Server": "cloudflare", "Last-Modified": "Sun, 28 Jan 2018 23:17:34 GMT", "Connection": "keep-alive", "Cache-Control": "public, max-age=14400", "Date": "Mon, 23 Apr 2018 08:49:18 GMT", "Access-Control-Allow-Credentials": "true", "Content-Type": "text/html; charset=UTF-8", "CF-RAY": "40ff1377de324e0c-DME"}, "requestSize": 0, "requestCookies": {"__cfduid": "d57ed9f4c67ff93c5e70288846dd719e61524473358"}, "responseMessage": "OK"}}, {"status": "PASSED", "start_time": 1524473358.072818, "error_trace": null, "subsamples": [], "assertions": [], "duration": 0.016824, "path": [{"type": "package", "value": "tests"}, {"type": "module", "value": "test_transactions"}, {"type": "class", "value": "TestRequests"}, {"type": "method", "value": "test_5_multiple_transactions"}, {"type": "transaction", "value": "Transaction 1"}, {"type": "request", "value": "https://jsonplaceholder.typicode.com/2"}], "error_msg": null, "test_case": "https://jsonplaceholder.typicode.com/2", "test_suite": "Transaction 1", "extras": {"responseTime": 16, "responseHeadersSize": 703, "requestHeadersSize": 20, "responseSize": 2, "latency": 16, "requestURI": "https://jsonplaceholder.typicode.com/2", "responseBodySize": 2, "connectTime": 0, "requestBodySize": 0, "requestBody": "", "responseBody": "{}", "requestCookiesRaw": "__cfduid=d57ed9f4c67ff93c5e70288846dd719e61524473358", "requestMethod": "GET", "assertions": [], "responseCode": 404, "requestHeaders": {"User-Agent": "Apiritif"}, "requestCookiesSize": 52, "responseHeaders": {"Expect-CT": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"", "Content-Length": "2", "Via": "1.1 vegur", "X-Content-Type-Options": "nosniff", "X-Powered-By": "Express", "Set-Cookie": "__cfduid=d57ed9f4c67ff93c5e70288846dd719e61524473358; expires=Tue, 23-Apr-19 08:49:18 GMT; path=/; domain=.typicode.com; HttpOnly", "CF-Cache-Status": "HIT", "Expires": "Mon, 23 Apr 2018 12:49:18 GMT", "Vary": "Origin, Accept-Encoding", "Server": "cloudflare", "Connection": "keep-alive", "Etag": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\"", "Pragma": "no-cache", "Cache-Control": "public, max-age=14400", "Date": "Mon, 23 Apr 2018 08:49:18 GMT", "Access-Control-Allow-Credentials": "true", "Content-Type": "application/json; charset=utf-8", "CF-RAY": "40ff1377fe3b4e0c-DME"}, "requestSize": 0, "requestCookies": {"__cfduid": "d57ed9f4c67ff93c5e70288846dd719e61524473358"}, "responseMessage": "Not Found"}}], "assertions": [], "duration": 0.03658795356750488, "path": [{"type": "package", "value": "tests"}, {"type": "module", "value": "test_transactions"}, {"type": "class", "value": "TestRequests"}, {"type": "method", "value": "test_5_multiple_transactions"}, {"type": "transaction", "value": "Transaction 1"}], "error_msg": null, "test_case": "Transaction 1", "test_suite": "test_5_multiple_transactions", "extras": {"responseTime": 36, "responseHeadersSize": 20, "requestHeadersSize": 20, "responseSize": 2, "latency": 36, "requestURI": "Transaction 1", "responseBodySize": 2, "connectTime": 0, "requestBodySize": 0, "requestBody": "", "responseBody": "{}", "requestCookiesRaw": "__cfduid=d57ed9f4c67ff93c5e70288846dd719e61524473358", "requestMethod": "GET", "assertions": [], "responseCode": 404, "requestHeaders": {"User-Agent": "Apiritif"}, "requestCookiesSize": 52, "responseHeaders": {"User-Agent": "Apiritif"}, "requestSize": 0, "requestCookies": {"__cfduid": "d57ed9f4c67ff93c5e70288846dd719e61524473358"}, "responseMessage": "Not Found"}}, {"status": "PASSED", "start_time": 1524473358.072833, "error_trace": null, "subsamples": [{"status": "PASSED", "start_time": 1524473358.102096, "error_trace": null, "subsamples": [], "assertions": [], "duration": 0.027789, "path": [{"type": "package", "value": "tests"}, {"type": "module", "value": "test_transactions"}, {"type": "class", "value": "TestRequests"}, {"type": "method", "value": "test_5_multiple_transactions"}, {"type": "transaction", "value": "Transaction 2"}, {"type": "request", "value": "https://jsonplaceholder.typicode.com/"}], "error_msg": null, "test_case": "https://jsonplaceholder.typicode.com/", "test_suite": "Transaction 2", "extras": {"responseTime": 27, "responseHeadersSize": 661, "requestHeadersSize": 20, "responseSize": 6301, "latency": 27, "requestURI": "https://jsonplaceholder.typicode.com/", "responseBodySize": 6301, "connectTime": 0, "requestBodySize": 0, "requestBody": "", "responseBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>JSONPlaceholder - Fake online REST API for developers</title>\n<meta name=\"description\" content=\"Fake online REST API for developers\">\n<meta name=\"author\" content=\"Typicode\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/styles/github.min.css\">\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/highlight.min.js\"></script>\n<script>hljs.initHighlightingOnLoad();</script>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\">\n\n<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\n</head>\n<body>\n<header>\n<h1>\n<img src=\"http://i.imgur.com/QRlAg0b.png\">\n<br>JSONPlaceholder\n</h1>\n<p>\nFake Online REST API for Testing and Prototyping\n<br>\n<small>\npowered by\n<a href=\"https://github.com/typicode/json-server\">JSON Server</a>\nand\n<a href=\"https://github.com/typicode/lowdb\">lowdb</a>\n</small>\n</p>\n</header>\n<div class=\"see-also\">\n<div class=\"narrow\">\n<a href=\"https://cypress.io\" onclick=\"trackOutboundLink('https://cypress.io')\">\nSee also\n<img title=\"\" src=\"https://www.cypress.io/img/logo-dark.4e8064a6.png\" /> Fast, easy and reliable testing for anything that runs in a browser.</a>\n</div>\n</div>\n<div class=\"narrow\">\n\n<h2>Intro</h2>\n<p>\nJSONPlaceholder is a free online REST service that you can use whenever you need some fake data.\n</p>\n<p>\nIt's great for tutorials, faking a server, sharing code examples, ...\n</p>\n<h2>Example</h2>\n<p>\nRun this code in a console or from anywhere.\n<br> HTTP and HTTPS are both supported.\n</p>\n<pre><code id=\"example\" class=\"javascript\">fetch('https://jsonplaceholder.typicode.com/posts/1')\n  .then(response => response.json())\n  .then(json => console.log(json))\n</code></pre>\n<p>\n<button id=\"run\">Run</button>\n</p>\n<p id=\"result\" class=\"json\">// click the button above to make a request ;)</p>\n<h2>Resources</h2>\n<p>\nInspired by common use cases.\n</p>\n<table>\n<tr>\n<td>\n<a href=\"/posts\">/posts</a>\n</td>\n<td>100 items</td>\n</tr>\n<tr>\n<td>\n<a href=\"/comments\">/comments</a>\n</td>\n<td>500 items</td>\n</tr>\n<tr>\n<td>\n<a href=\"/albums\">/albums</a>\n</td>\n<td>100 items</td>\n</tr>\n<tr>\n<td>\n<a href=\"/photos\">/photos</a>\n</td>\n<td>5000 items</td>\n</tr>\n<tr>\n<td>\n<a href=\"/todos\">/todos</a>\n</td>\n<td>200 items</td>\n</tr>\n<tr>\n<td>\n<a href=\"/users\">/users</a>\n</td>\n<td>10 items</td>\n</tr>\n</table>\n<h2>Routes</h2>\n<p>\nAll HTTP verbs are supported.\n<br> View usage\n<a href=\"https://github.com/typicode/jsonplaceholder#how-to\">examples</a>.\n</p>\n<table>\n<tr>\n<td class=\"verb\">GET</td>\n<td>\n<a href=\"/posts\">/posts</a>\n</td>\n</tr>\n<tr>\n<td class=\"verb\">GET</td>\n<td>\n<a href=\"/posts/1\">/posts/1</a>\n</td>\n</tr>\n<tr>\n<td class=\"verb\">GET</td>\n<td>\n<a href=\"/posts/1/comments\">/posts/1/comments</a>\n</td>\n</tr>\n<tr>\n<td class=\"verb\">GET</td>\n<td>\n<a href=\"/comments?postId=1\">/comments?postId=1</a>\n</td>\n</tr>\n<tr>\n<td class=\"verb\">GET</td>\n<td>\n<a href=\"/posts?userId=1\">/posts?userId=1</a>\n</td>\n</tr>\n<tr>\n<td class=\"verb\">POST</td>\n<td>/posts</td>\n</tr>\n<tr>\n<td class=\"verb\">PUT</td>\n<td>/posts/1</td>\n</tr>\n<tr>\n<td class=\"verb\">PATCH</td>\n<td>/posts/1</td>\n</tr>\n<tr>\n<td class=\"verb\">DELETE</td>\n<td>/posts/1</td>\n</tr>\n</tr>\n</table>\n<h2>Use your OWN data</h2>\n<p>\n<a href=\"https://github.com/typicode/json-server\">JSON Server</a> powers this website. You can use it to create the same fake API in less than\n<strong>30 seconds</strong> with your own data.\n</p>\n<pre><code class=\"bash\">npm install -g json-server</code></pre>\n<p>Or you can try\n<a href=\"https://my-json-server.typicode.com\">My JSON Server</a> free service.</p>\n</div>\n<footer>\n<p>\nCoded and built with\n<i class=\"fa fa-heart\"></i>\nby\n<a href=\"https://github.com/typicode\">typicode</a>\n<br>Source code available on\n<a href=\"https://github.com/typicode/jsonplaceholder\">GitHub</a>\n<br> Support me on\n<a href=\"https://patreon.com/typicode\" onclick=\"trackOutboundLink('https://patreon.com/typicode')\">Patreon</a>\n</p>\n</footer>\n<div class=\"more\">\n</div>\n\n\n\n<script>\n    (function (i, s, o, g, r, a, m) {\n      i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {\n        (i[r].q = i[r].q || []).push(arguments)\n      }, i[r].l = 1 * new Date(); a = s.createElement(o), m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a,\n        m)\n    })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga'); ga('create', 'UA-44497010-1', 'typicode.com');\n    ga('send', 'pageview'); var trackOutboundLink = function (url) {\n      ga('send', 'event', 'outbound', 'click', url, {\n        'transport':\n          'beacon'\n      });\n    }\n  </script>\n<script>\n    window.twttr = (function (d, s, id) {\n      var js, fjs = d.getElementsByTagName(s)[0],\n        t = window.twttr || {};\n      if (d.getElementById(id)) return t;\n      js = d.createElement(s);\n      js.id = id;\n      js.src = \"https://platform.twitter.com/widgets.js\";\n      fjs.parentNode.insertBefore(js, fjs);\n\n      t._e = [];\n      t.ready = function (f) {\n        t._e.push(f);\n      };\n\n      return t;\n    }(document, \"script\", \"twitter-wjs\"));\n  </script>\n<script src=\"https://code.jquery.com/jquery-2.1.3.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/fetch/2.0.3/fetch.min.js\"></script>\n<script>\n    // Use http or https based on location.protocol\n    var exampleText = $('#example').text()\n    $('#example').text(exampleText.replace('http:', location.protocol))\n\n    // Highlight result element\n    $('#result').each(function (i, block) {\n      hljs.highlightBlock(block);\n    });\n\n    // Run example\n    $('#run').click(function () {\n      var root = location.protocol + '//jsonplaceholder.typicode.com';\n      $.ajax({\n        url: root + '/posts/1',\n        method: 'GET'\n      }).then(function (data) {\n        var str = JSON.stringify(data, null, '\\t')\n        $('#result').html(\n          str.replace(/\\n/g, '<br/>')\n            .replace(/\\\\n/g, ' ')\n            .replace(/\\t/g, '&nbsp;&nbsp;')\n        );\n\n        $('#result').each(function (i, block) {\n          hljs.highlightBlock(block);\n        });\n      });\n    });\n  </script>\n</body>\n</html>", "requestCookiesRaw": "__cfduid=d57ed9f4c67ff93c5e70288846dd719e61524473358", "requestMethod": "GET", "assertions": [], "responseCode": 200, "requestHeaders": {"User-Agent": "Apiritif"}, "requestCookiesSize": 52, "responseHeaders": {"Expect-CT": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"", "Via": "1.1 vegur", "X-Powered-By": "Express", "Transfer-Encoding": "chunked", "Set-Cookie": "__cfduid=d57ed9f4c67ff93c5e70288846dd719e61524473358; expires=Tue, 23-Apr-19 08:49:18 GMT; path=/; domain=.typicode.com; HttpOnly", "CF-Cache-Status": "HIT", "Expires": "Mon, 23 Apr 2018 12:49:18 GMT", "Vary": "Origin, Accept-Encoding", "Server": "cloudflare", "Last-Modified": "Sun, 28 Jan 2018 23:17:34 GMT", "Connection": "keep-alive", "Cache-Control": "public, max-age=14400", "Date": "Mon, 23 Apr 2018 08:49:18 GMT", "Access-Control-Allow-Credentials": "true", "Content-Type": "text/html; charset=UTF-8", "CF-RAY": "40ff13781e504e0c-DME"}, "requestSize": 0, "requestCookies": {"__cfduid": "d57ed9f4c67ff93c5e70288846dd719e61524473358"}, "responseMessage": "OK"}}, {"status": "PASSED", "start_time": 1524473358.124293, "error_trace": null, "subsamples": [], "assertions": [], "duration": 0.021775, "path": [{"type": "package", "value": "tests"}, {"type": "module", "value": "test_transactions"}, {"type": "class", "value": "TestRequests"}, {"type": "method", "value": "test_5_multiple_transactions"}, {"type": "transaction", "value": "Transaction 2"}, {"type": "request", "value": "https://jsonplaceholder.typicode.com/2"}], "error_msg": null, "test_case": "https://jsonplaceholder.typicode.com/2", "test_suite": "Transaction 2", "extras": {"responseTime": 21, "responseHeadersSize": 703, "requestHeadersSize": 20, "responseSize": 2, "latency": 21, "requestURI": "https://jsonplaceholder.typicode.com/2", "responseBodySize": 2, "connectTime": 0, "requestBodySize": 0, "requestBody": "", "responseBody": "{}", "requestCookiesRaw": "__cfduid=d57ed9f4c67ff93c5e70288846dd719e61524473358", "requestMethod": "GET", "assertions": [], "responseCode": 404, "requestHeaders": {"User-Agent": "Apiritif"}, "requestCookiesSize": 52, "responseHeaders": {"Expect-CT": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"", "Content-Length": "2", "Via": "1.1 vegur", "X-Content-Type-Options": "nosniff", "X-Powered-By": "Express", "Set-Cookie": "__cfduid=d57ed9f4c67ff93c5e70288846dd719e61524473358; expires=Tue, 23-Apr-19 08:49:18 GMT; path=/; domain=.typicode.com; HttpOnly", "CF-Cache-Status": "HIT", "Expires": "Mon, 23 Apr 2018 12:49:18 GMT", "Vary": "Origin, Accept-Encoding", "Server": "cloudflare", "Connection": "keep-alive", "Etag": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\"", "Pragma": "no-cache", "Cache-Control": "public, max-age=14400", "Date": "Mon, 23 Apr 2018 08:49:18 GMT", "Access-Control-Allow-Credentials": "true", "Content-Type": "application/json; charset=utf-8", "CF-RAY": "40ff13784e5d4e0c-DME"}, "requestSize": 0, "requestCookies": {"__cfduid": "d57ed9f4c67ff93c5e70288846dd719e61524473358"}, "responseMessage": "Not Found"}}], "assertions": [], "duration": 0.05147099494934082, "path": [{"type": "package", "value": "tests"}, {"type": "module", "value": "test_transactions"}, {"type": "class", "value": "TestRequests"}, {"type": "method", "value": "test_5_multiple_transactions"}, {"type": "transaction", "value": "Transaction 2"}], "error_msg": null, "test_case": "Transaction 2", "test_suite": "test_5_multiple_transactions", "extras": {"responseTime": 51, "responseHeadersSize": 20, "requestHeadersSize": 20, "responseSize": 2, "latency": 51, "requestURI": "Transaction 2", "responseBodySize": 2, "connectTime": 0, "requestBodySize": 0, "requestBody": "", "responseBody": "{}", "requestCookiesRaw": "__cfduid=d57ed9f4c67ff93c5e70288846dd719e61524473358", "requestMethod": "GET", "assertions": [], "responseCode": 404, "requestHeaders": {"User-Agent": "Apiritif"}, "requestCookiesSize": 52, "responseHeaders": {"User-Agent": "Apiritif"}, "requestSize": 0, "requestCookies": {"__cfduid": "d57ed9f4c67ff93c5e70288846dd719e61524473358"}, "responseMessage": "Not Found"}}], "assertions": [], "duration": 0.08814215660095215, "path": [{"type": "package", "value": "tests"}, {"type": "module", "value": "test_transactions"}, {"type": "class", "value": "TestRequests"}, {"type": "method", "value": "test_5_multiple_transactions"}], "error_msg": null, "test_case": "test_5_multiple_transactions", "test_suite": "TestRequests", "extras": {"assertions": [], "file": "/home/dmand/src/apiritif/tests/test_transactions.py", "full_name": "tests.test_transactions.TestRequests.test_5_multiple_transactions", "description": null}}
{"status": "PASSED", "start_time": 1524473358.125175, "error_trace": null, "subsamples": [{"status": "PASSED", "start_time": 1524473358.12524, "error_trace": null, "subsamples": [], "assertions": [], "duration": 0.5005810260772705, "path": [{"type": "package", "value": "tests"}, {"type": "module", "value": "test_transactions"}, {"type": "class", "value": "TestRequests"}, {"type": "method", "value": "test_6_transaction_obj"}, {"type": "transaction", "value": "Label"}], "error_msg": null, "test_case": "Label", "test_suite": "test_6_transaction_obj", "extras": {"responseTime": 500, "responseHeadersSize": 0, "requestHeadersSize": 0, "responseSize": 0, "latency": 500, "requestURI": "Label", "responseBodySize": 0, "connectTime": 0, "requestBodySize": 0, "requestBody": "", "responseBody": "", "requestCookiesRaw": "", "requestMethod": "", "assertions": [], "responseCode": null, "requestHeaders": {}, "requestCookiesSize": 0, "responseHeaders": {}, "requestSize": 0, "requestCookies": {}, "responseMessage": ""}}], "assertions": [], "duration": 0.500694990158081, "path": [{"type": "package", "value": "tests"}, {"type": "module", "value": "test_transactions"}, {"type": "class", "value": "TestRequests"}, {"type": "method", "value": "test_6_transaction_obj"}], "error_msg": null, "test_case": "test_6_transaction_obj", "test_suite": "TestRequests", "extras": {"assertions": [], "file": "/home/dmand/src/apiritif/tests/test_transactions.py", "full_name": "tests.test_transactions.TestRequests.test_6_transaction_obj", "description": null}}
{"status": "PASSED", "start_time": 1524473358.626357, "error_trace": null, "subsamples": [{"status": "FAILED", "start_time": 1524473358.626407, "error_trace": null, "subsamples": [], "assertions": [], "duration": 7.152557373046875e-06, "path": [{"type": "package", "value": "tests"}, {"type": "module", "value": "test_transactions"}, {"type": "class", "value": "TestRequests"}, {"type": "method", "value": "test_7_transaction_fail"}, {"type": "transaction", "value": "Label"}], "error_msg": "Something went wrong", "test_case": "Label", "test_suite": "test_7_transaction_fail", "extras": {"responseTime": 0, "responseHeadersSize": 0, "requestHeadersSize": 0, "responseSize": 0, "latency": 0, "requestURI": "Label", "responseBodySize": 0, "connectTime": 0, "requestBodySize": 0, "requestBody": "", "responseBody": "", "requestCookiesRaw": "", "requestMethod": "", "assertions": [], "responseCode": null, "requestHeaders": {}, "requestCookiesSize": 0, "responseHeaders": {}, "requestSize": 0, "requestCookies": {}, "responseMessage": ""}}], "assertions": [], "duration": 6.4849853515625e-05, "path": [{"type": "package", "value": "tests"}, {"type": "module", "value": "test_transactions"}, {"type": "class", "value": "TestRequests"}, {"type": "method", "value": "test_7_transaction_fail"}], "error_msg": null, "test_case": "test_7_transaction_fail", "test_suite": "TestRequests", "extras": {"assertions": [], "file": "/home/dmand/src/apiritif/tests/test_transactions.py", "full_name": "tests.test_transactions.TestRequests.test_7_transaction_fail", "description": null}}
{"status": "PASSED", "start_time": 1524473358.626646, "error_trace": null, "subsamples": [{"status": "PASSED", "start_time": 1524473358.6267, "error_trace": null, "subsamples": [], "assertions": [], "duration": 9.059906005859375e-06, "path": [{"type": "package", "value": "tests"}, {"type": "module", "value": "test_transactions"}, {"type": "class", "value": "TestRequests"}, {"type": "method", "value": "test_8_transaction_attach"}, {"type": "transaction", "value": "Label"}], "error_msg": null, "test_case": "Label", "test_suite": "test_8_transaction_attach", "extras": {"assertions": [], "responseHeaders": {}, "requestSize": 0, "responseSize": 13, "latency": 0, "requestHeaders": {}, "responseBodySize": 13, "connectTime": 0, "requestBodySize": 12, "responseBody": "Response body", "requestCookiesRaw": "", "requestHeadersSize": 0, "responseHeadersSize": 0, "requestURI": "Label", "user": "YO", "responseTime": 0, "requestCookiesSize": 0, "requestCookies": {}, "requestBody": "Request body", "requestMethod": "", "responseMessage": "", "responseCode": 201}}], "assertions": [], "duration": 7.200241088867188e-05, "path": [{"type": "package", "value": "tests"}, {"type": "module", "value": "test_transactions"}, {"type": "class", "value": "TestRequests"}, {"type": "method", "value": "test_8_transaction_attach"}], "error_msg": null, "test_case": "test_8_transaction_attach", "test_suite": "TestRequests", "extras": {"assertions": [], "file": "/home/dmand/src/apiritif/tests/test_transactions.py", "full_name": "tests.test_transactions.TestRequests.test_8_transaction_attach", "description": null}}
