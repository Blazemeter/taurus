clearWorkspaceAsRoot()

@Library ("jenkins_library") _

properties([pipelineTriggers([githubPush()])]) //Enable Git webhook triggering

pipeline {

  options {
    buildDiscarder(logRotator(numToKeepStr: '200', daysToKeepStr: '30'))
    ansiColor('xterm')
    timeout time: 60, unit: 'MINUTES'
    timestamps()
  }

  agent {
    dockerfile {
      filename 'tests/ci/Dockerfile.build'
      args '-u root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }

  stages {
    stage('Building artifacts') {
      steps {
        script {
          VERSION = sh(returnStdout: true, script: "git describe --tags \$(git rev-list --tags --max-count=1)").trim()
          GIT_INFO = sh(returnStdout: true, script: "echo \$(git rev-parse --abbrev-ref HEAD) \$(git show --oneline -s)").trim()
          buildArtifacts()
        }
      }
    }

    stage('Building an image') {
      steps {
        script {
          imageTag = buildImage()
        }
      }
    }

    stage('Pushing an image') {
      steps {
        script {
          pushImage(imageTag)
        }
      }
    }
  }
  post {
    always {
        cleanWs()
    }
  }
}

def buildArtifacts() {
  sh """
     echo 'BUILD_NUM=\"${BUILD_NUMBER}\"' > bzt/resources/version/build.py
     echo 'VERSION=\"${VERSION}\"' > bzt/resources/version/version.py
     echo 'GIT_INFO=\"${GIT_INFO}\"' > bzt/resources/version/gitinfo.py
     ./build-artifacts.sh
     """
}

def buildImage() {
  def branch = BRANCH_NAME.toString().replace("origin/", "");
  git branch: "${branch}", credentialsId: 'github-token', url: 'https://github.com/Blazemeter/taurus.git'
  def editedBranch = branch.replaceAll("/", "-");
  def TAURUS_VERSION = "${editedBranch}" + "-${BUILD_NUMBER}"
  def imageTag = "blazemeter/taurus:${TAURUS_VERSION}"
  sh "docker build --no-cache -t ${imageTag} ."

  return imageTag;
}

def pushImage(imageTag) {
  withDockerRegistry([ credentialsId: "dockerhub-access", url: "" ]) {
    sh "docker push ${imageTag}"
  }
}
