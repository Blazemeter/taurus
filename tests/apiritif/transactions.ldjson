{"error_msg": null, "test_case": "test_1_single_request", "status": "PASSED", "start_time": 1492508224.4707127, "error_trace": null, "test_suite": "TestRequests", "subsamples": [{"error_msg": null, "test_case": "https://jsonplaceholder.typicode.com/", "status": "PASSED", "start_time": 1492508229.72517, "error_trace": null, "test_suite": "test_1_single_request", "subsamples": [], "extras": {"requestSize": 0, "connectTime": 0, "responseMessage": "OK", "requestBodySize": 0, "responseSize": 6848, "requestURI": "https://jsonplaceholder.typicode.com/", "assertions": [], "requestHeadersSize": 0, "responseHeadersSize": 560, "requestMethod": "GET", "requestBody": "", "latency": 0, "responseCode": 200, "requestHeaders": {}, "requestCookiesSize": 52, "requestCookiesRaw": "__cfduid=d3814f3de5a17a50ae6a3aaf8027e11771492508170", "requestCookies": {"__cfduid": "d3814f3de5a17a50ae6a3aaf8027e11771492508170"}, "responseTime": 5.241063, "responseHeaders": {"Cache-Control": "public, max-age=14400", "CF-RAY": "3516a3631a454eb4-DME", "X-Powered-By": "Express", "CF-Cache-Status": "HIT", "Connection": "keep-alive", "Via": "1.1 vegur", "Access-Control-Allow-Credentials": "true", "Last-Modified": "Mon, 10 Apr 2017 21:57:52 GMT", "Set-Cookie": "__cfduid=d3814f3de5a17a50ae6a3aaf8027e11771492508170; expires=Wed, 18-Apr-18 09:36:10 GMT; path=/; domain=.typicode.com; HttpOnly", "Transfer-Encoding": "chunked", "Vary": "Accept-Encoding", "Server": "cloudflare-nginx", "Date": "Tue, 18 Apr 2017 09:36:10 GMT", "Expires": "Tue, 18 Apr 2017 13:36:10 GMT", "Content-Type": "text/html; charset=UTF-8"}, "responseBodySize": 6844, "responseBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>JSONPlaceholder - Fake online REST API for developers</title>\n<meta name=\"description\" content=\"Fake online REST API for developers\">\n<meta name=\"author\" content=\"Typicode\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/styles/github.min.css\">\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/highlight.min.js\"></script>\n<script>hljs.initHighlightingOnLoad();</script>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\">\n \n<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\n</head>\n<body>\n<header>\n<h1><img src=\"http://i.imgur.com/QRlAg0b.png\"><br>JSONPlaceholder\u00a0</h1>\n<p>\nFake Online REST API for Testing and Prototyping<br>\n<small>\npowered by <a href=\"https://github.com/typicode/json-server\">JSON Server</a>\nand <a href=\"https://github.com/typicode/lowdb\">lowdb</a>\n</small>\n</p>\n</header>\n<div class=\"narrow\">\n<div class=\"center\">\n \n<div class=\"inline\">\n<div id=\"fb-root\"></div>\n<script>(function(d, s, id) {\n            var js, fjs = d.getElementsByTagName(s)[0];\n            if (d.getElementById(id)) return;\n            js = d.createElement(s); js.id = id;\n            js.src = \"//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.0\";\n            fjs.parentNode.insertBefore(js, fjs);\n          }(document, 'script', 'facebook-jssdk'));</script>\n<div class=\"fb-like\" data-href=\"http://jsonplaceholder.typicode.com/\" data-layout=\"button_count\" data-action=\"recommend\" data-show-faces=\"false\" data-share=\"false\"></div>\n</div>\n<div class=\"inline\">\n<a class=\"twitter-follow-button\" href=\"https://twitter.com/typicode\" data-show-count=\"false\">\nFollow @typicode\n</a>\n</div>\n<div class=\"center\">\n<a class=\"sponsor\" href=\"https://patreon.com/typicode\" onclick=\"trackOutboundLink('https://patreon.com/typicode')\">\nSupport <b>JSONPlaceholder</b> and <b>my other OSS projects</b> on <b>Patreon</b> <i class=\"fa fa-smile-o\" aria-hidden=\"true\"></i>\n</a>\n</div>\n</div>\n<h2>Intro</h2>\n<p>\nJSONPlaceholder is a free online REST service that you can use whenever you need some fake data.\n</p>\n<p>\nIt's great for tutorials, faking a server, sharing code examples, ...\n</p>\n<h2>Example</h2>\n<p>Run this code in a console or from anywhere (CORS and JSONP supported).</p>\n<pre><code id=\"example\" class=\"javascript\">var root = 'http://jsonplaceholder.typicode.com';\n\n$.ajax({\n  url: root + '/posts/1',\n  method: 'GET'\n}).then(function(data) {\n  console.log(data);\n});</code></pre>\n<p>\n<button id=\"run\">Run</button>\n</p>\n<p id=\"result\" class=\"json\">\"Try me!\"</p>\n<h2>Resources</h2>\n<p>\nInspired by common use cases.\n</p>\n<table>\n<tr><td><a href=\"/posts\">/posts</a></td><td>100 items</td></tr>\n<tr><td><a href=\"/comments\">/comments</a></td><td>500 items</td></tr>\n<tr><td><a href=\"/albums\">/albums</a></td><td>100 items</td></tr>\n<tr><td><a href=\"/photos\">/photos</a></td><td>5000 items</td></tr>\n<tr><td><a href=\"/todos\">/todos</a></td><td>200 items</td></tr>\n<tr><td><a href=\"/users\">/users</a></td><td>10 items</td></tr>\n</table>\n<h2>Routes</h2>\n<p>\nAll HTTP verbs are supported.<br>\nView usage <a href=\"https://github.com/typicode/jsonplaceholder#how-to\">examples</a>.\n</p>\n<table>\n<tr><td class=\"verb\">GET</td><td><a href=\"/posts\">/posts</a></td></tr>\n<tr><td class=\"verb\">GET</td><td><a href=\"/posts/1\">/posts/1</a></td></tr>\n<tr><td class=\"verb\">GET</td><td><a href=\"/posts/1/comments\">/posts/1/comments</a></td></tr>\n<tr><td class=\"verb\">GET</td><td><a href=\"/comments?postId=1\">/comments?postId=1</a></td></tr>\n<tr><td class=\"verb\">GET</td><td><a href=\"/posts?userId=1\">/posts?userId=1</a></td></tr>\n<tr><td class=\"verb\">POST</td><td>/posts</td></tr>\n<tr><td class=\"verb\">PUT</td><td>/posts/1</td></tr>\n<tr><td class=\"verb\">PATCH</td><td>/posts/1</td></tr>\n<tr><td class=\"verb\">DELETE</td><td>/posts/1</td></tr>\n</tr>\n</table>\n<h2>Use your OWN data</h2>\n<p>\n<a href=\"https://github.com/typicode/json-server\">JSON Server</a> powers this website.\nYou can use it to create the same fake API in less than <strong>30 seconds</strong> with your own data.\n</p>\n<pre><code class=\"bash\">npm install -g json-server</code></pre>\n</div>\n<footer>\n<p>\nCoded and built with <i class=\"fa fa-heart\"></i>\nby <a href=\"https://github.com/typicode\">typicode</a>.\nSource code available on\n<a href=\"https://github.com/typicode/jsonplaceholder\">GitHub</a>.\n</p>\n</footer>\n<a href=\"https://github.com/typicode/hotel\" class=\"more\">\n<p>\nHotel - \ud83c\udfe9 the friendly process manager for developers\n</p>\n</a>\n \n<script>\n      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n      })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n\n      ga('create', 'UA-44497010-1', 'typicode.com');\n      ga('send', 'pageview');\n\n      var trackOutboundLink = function(url) {\n        ga('send', 'event', 'outbound', 'click', url, {\n          'transport': 'beacon'\n        });\n      }\n    </script>\n<script>window.twttr = (function(d, s, id) {\n      var js, fjs = d.getElementsByTagName(s)[0],\n        t = window.twttr || {};\n      if (d.getElementById(id)) return t;\n      js = d.createElement(s);\n      js.id = id;\n      js.src = \"https://platform.twitter.com/widgets.js\";\n      fjs.parentNode.insertBefore(js, fjs);\n\n      t._e = [];\n      t.ready = function(f) {\n        t._e.push(f);\n      };\n\n      return t;\n    }(document, \"script\", \"twitter-wjs\"));</script>\n<script src=\"https://code.jquery.com/jquery-2.1.3.min.js\"></script>\n<script>\n      // Use http or https based on location.protocol\n      var exampleText = $('#example').text()\n      $('#example').text(exampleText.replace('http:', location.protocol))\n\n      // Highlight result element\n      $('#result').each(function(i, block) {\n        hljs.highlightBlock(block);\n      });\n\n      // Run example\n      $('#run').click(function() {\n        var root = location.protocol + '//jsonplaceholder.typicode.com';\n        $.ajax({\n          url: root + '/posts/1',\n          method: 'GET'\n        }).then(function(data) {\n          var str = JSON.stringify(data, null, '\\t')\n          $('#result').html(\n            str.replace(/\\n/g, '<br/>')\n               .replace(/\\\\n/g, ' ')\n               .replace(/\\t/g, '&nbsp;&nbsp;')\n          );\n\n          $('#result').each(function(i, block) {\n            hljs.highlightBlock(block);\n          });\n        });\n      });\n\n      // Tell that jQuery can be used in console\n      console.log('You can use jQuery functions')\n    </script>\n</body>\n</html>\n"}, "duration": 5.241063}], "extras": {"full_name": "tests.apiritif.test_transactions.TestRequests.test_1_single_request", "file": "/home/dmand/src/taurus/tests/apiritif/test_transactions.py", "description": null}, "duration": 5.254595756530762}
{"error_msg": null, "test_case": "test_2_multiple_requests", "status": "PASSED", "start_time": 1492508229.7257276, "error_trace": null, "test_suite": "TestRequests", "subsamples": [{"error_msg": null, "test_case": "https://jsonplaceholder.typicode.com/", "status": "PASSED", "start_time": 1492508229.755111, "error_trace": null, "test_suite": "test_2_multiple_requests", "subsamples": [], "extras": {"requestSize": 0, "connectTime": 0, "responseMessage": "OK", "requestBodySize": 0, "responseSize": 6848, "requestURI": "https://jsonplaceholder.typicode.com/", "assertions": [], "requestHeadersSize": 0, "responseHeadersSize": 560, "requestMethod": "GET", "requestBody": "", "latency": 0, "responseCode": 200, "requestHeaders": {}, "requestCookiesSize": 52, "requestCookiesRaw": "__cfduid=d3814f3de5a17a50ae6a3aaf8027e11771492508170", "requestCookies": {"__cfduid": "d3814f3de5a17a50ae6a3aaf8027e11771492508170"}, "responseTime": 0.027371, "responseHeaders": {"Cache-Control": "public, max-age=14400", "CF-RAY": "3516a3638ac14eb4-DME", "X-Powered-By": "Express", "CF-Cache-Status": "HIT", "Connection": "keep-alive", "Via": "1.1 vegur", "Access-Control-Allow-Credentials": "true", "Last-Modified": "Mon, 10 Apr 2017 21:57:52 GMT", "Set-Cookie": "__cfduid=d3814f3de5a17a50ae6a3aaf8027e11771492508170; expires=Wed, 18-Apr-18 09:36:10 GMT; path=/; domain=.typicode.com; HttpOnly", "Transfer-Encoding": "chunked", "Vary": "Accept-Encoding", "Server": "cloudflare-nginx", "Date": "Tue, 18 Apr 2017 09:36:10 GMT", "Expires": "Tue, 18 Apr 2017 13:36:10 GMT", "Content-Type": "text/html; charset=UTF-8"}, "responseBodySize": 6844, "responseBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>JSONPlaceholder - Fake online REST API for developers</title>\n<meta name=\"description\" content=\"Fake online REST API for developers\">\n<meta name=\"author\" content=\"Typicode\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/styles/github.min.css\">\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/highlight.min.js\"></script>\n<script>hljs.initHighlightingOnLoad();</script>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\">\n \n<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\n</head>\n<body>\n<header>\n<h1><img src=\"http://i.imgur.com/QRlAg0b.png\"><br>JSONPlaceholder\u00a0</h1>\n<p>\nFake Online REST API for Testing and Prototyping<br>\n<small>\npowered by <a href=\"https://github.com/typicode/json-server\">JSON Server</a>\nand <a href=\"https://github.com/typicode/lowdb\">lowdb</a>\n</small>\n</p>\n</header>\n<div class=\"narrow\">\n<div class=\"center\">\n \n<div class=\"inline\">\n<div id=\"fb-root\"></div>\n<script>(function(d, s, id) {\n            var js, fjs = d.getElementsByTagName(s)[0];\n            if (d.getElementById(id)) return;\n            js = d.createElement(s); js.id = id;\n            js.src = \"//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.0\";\n            fjs.parentNode.insertBefore(js, fjs);\n          }(document, 'script', 'facebook-jssdk'));</script>\n<div class=\"fb-like\" data-href=\"http://jsonplaceholder.typicode.com/\" data-layout=\"button_count\" data-action=\"recommend\" data-show-faces=\"false\" data-share=\"false\"></div>\n</div>\n<div class=\"inline\">\n<a class=\"twitter-follow-button\" href=\"https://twitter.com/typicode\" data-show-count=\"false\">\nFollow @typicode\n</a>\n</div>\n<div class=\"center\">\n<a class=\"sponsor\" href=\"https://patreon.com/typicode\" onclick=\"trackOutboundLink('https://patreon.com/typicode')\">\nSupport <b>JSONPlaceholder</b> and <b>my other OSS projects</b> on <b>Patreon</b> <i class=\"fa fa-smile-o\" aria-hidden=\"true\"></i>\n</a>\n</div>\n</div>\n<h2>Intro</h2>\n<p>\nJSONPlaceholder is a free online REST service that you can use whenever you need some fake data.\n</p>\n<p>\nIt's great for tutorials, faking a server, sharing code examples, ...\n</p>\n<h2>Example</h2>\n<p>Run this code in a console or from anywhere (CORS and JSONP supported).</p>\n<pre><code id=\"example\" class=\"javascript\">var root = 'http://jsonplaceholder.typicode.com';\n\n$.ajax({\n  url: root + '/posts/1',\n  method: 'GET'\n}).then(function(data) {\n  console.log(data);\n});</code></pre>\n<p>\n<button id=\"run\">Run</button>\n</p>\n<p id=\"result\" class=\"json\">\"Try me!\"</p>\n<h2>Resources</h2>\n<p>\nInspired by common use cases.\n</p>\n<table>\n<tr><td><a href=\"/posts\">/posts</a></td><td>100 items</td></tr>\n<tr><td><a href=\"/comments\">/comments</a></td><td>500 items</td></tr>\n<tr><td><a href=\"/albums\">/albums</a></td><td>100 items</td></tr>\n<tr><td><a href=\"/photos\">/photos</a></td><td>5000 items</td></tr>\n<tr><td><a href=\"/todos\">/todos</a></td><td>200 items</td></tr>\n<tr><td><a href=\"/users\">/users</a></td><td>10 items</td></tr>\n</table>\n<h2>Routes</h2>\n<p>\nAll HTTP verbs are supported.<br>\nView usage <a href=\"https://github.com/typicode/jsonplaceholder#how-to\">examples</a>.\n</p>\n<table>\n<tr><td class=\"verb\">GET</td><td><a href=\"/posts\">/posts</a></td></tr>\n<tr><td class=\"verb\">GET</td><td><a href=\"/posts/1\">/posts/1</a></td></tr>\n<tr><td class=\"verb\">GET</td><td><a href=\"/posts/1/comments\">/posts/1/comments</a></td></tr>\n<tr><td class=\"verb\">GET</td><td><a href=\"/comments?postId=1\">/comments?postId=1</a></td></tr>\n<tr><td class=\"verb\">GET</td><td><a href=\"/posts?userId=1\">/posts?userId=1</a></td></tr>\n<tr><td class=\"verb\">POST</td><td>/posts</td></tr>\n<tr><td class=\"verb\">PUT</td><td>/posts/1</td></tr>\n<tr><td class=\"verb\">PATCH</td><td>/posts/1</td></tr>\n<tr><td class=\"verb\">DELETE</td><td>/posts/1</td></tr>\n</tr>\n</table>\n<h2>Use your OWN data</h2>\n<p>\n<a href=\"https://github.com/typicode/json-server\">JSON Server</a> powers this website.\nYou can use it to create the same fake API in less than <strong>30 seconds</strong> with your own data.\n</p>\n<pre><code class=\"bash\">npm install -g json-server</code></pre>\n</div>\n<footer>\n<p>\nCoded and built with <i class=\"fa fa-heart\"></i>\nby <a href=\"https://github.com/typicode\">typicode</a>.\nSource code available on\n<a href=\"https://github.com/typicode/jsonplaceholder\">GitHub</a>.\n</p>\n</footer>\n<a href=\"https://github.com/typicode/hotel\" class=\"more\">\n<p>\nHotel - \ud83c\udfe9 the friendly process manager for developers\n</p>\n</a>\n \n<script>\n      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n      })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n\n      ga('create', 'UA-44497010-1', 'typicode.com');\n      ga('send', 'pageview');\n\n      var trackOutboundLink = function(url) {\n        ga('send', 'event', 'outbound', 'click', url, {\n          'transport': 'beacon'\n        });\n      }\n    </script>\n<script>window.twttr = (function(d, s, id) {\n      var js, fjs = d.getElementsByTagName(s)[0],\n        t = window.twttr || {};\n      if (d.getElementById(id)) return t;\n      js = d.createElement(s);\n      js.id = id;\n      js.src = \"https://platform.twitter.com/widgets.js\";\n      fjs.parentNode.insertBefore(js, fjs);\n\n      t._e = [];\n      t.ready = function(f) {\n        t._e.push(f);\n      };\n\n      return t;\n    }(document, \"script\", \"twitter-wjs\"));</script>\n<script src=\"https://code.jquery.com/jquery-2.1.3.min.js\"></script>\n<script>\n      // Use http or https based on location.protocol\n      var exampleText = $('#example').text()\n      $('#example').text(exampleText.replace('http:', location.protocol))\n\n      // Highlight result element\n      $('#result').each(function(i, block) {\n        hljs.highlightBlock(block);\n      });\n\n      // Run example\n      $('#run').click(function() {\n        var root = location.protocol + '//jsonplaceholder.typicode.com';\n        $.ajax({\n          url: root + '/posts/1',\n          method: 'GET'\n        }).then(function(data) {\n          var str = JSON.stringify(data, null, '\\t')\n          $('#result').html(\n            str.replace(/\\n/g, '<br/>')\n               .replace(/\\\\n/g, ' ')\n               .replace(/\\t/g, '&nbsp;&nbsp;')\n          );\n\n          $('#result').each(function(i, block) {\n            hljs.highlightBlock(block);\n          });\n        });\n      });\n\n      // Tell that jQuery can be used in console\n      console.log('You can use jQuery functions')\n    </script>\n</body>\n</html>\n"}, "duration": 0.027371}, {"error_msg": null, "test_case": "https://jsonplaceholder.typicode.com/2", "status": "PASSED", "start_time": 1492508229.9890885, "error_trace": null, "test_suite": "test_2_multiple_requests", "subsamples": [], "extras": {"requestSize": 0, "connectTime": 0, "responseMessage": "Not Found", "requestBodySize": 0, "responseSize": 2, "requestURI": "https://jsonplaceholder.typicode.com/2", "assertions": [], "requestHeadersSize": 0, "responseHeadersSize": 566, "requestMethod": "GET", "requestBody": "", "latency": 0, "responseCode": 404, "requestHeaders": {}, "requestCookiesSize": 52, "requestCookiesRaw": "__cfduid=d3814f3de5a17a50ae6a3aaf8027e11771492508170", "requestCookies": {"__cfduid": "d3814f3de5a17a50ae6a3aaf8027e11771492508170"}, "responseTime": 0.232999, "responseHeaders": {"Cache-Control": "no-cache", "CF-RAY": "3516a363baf94eb4-DME", "X-Powered-By": "Express", "CF-Cache-Status": "EXPIRED", "Connection": "keep-alive", "Via": "1.1 vegur", "Access-Control-Allow-Credentials": "true", "Set-Cookie": "__cfduid=d3814f3de5a17a50ae6a3aaf8027e11771492508170; expires=Wed, 18-Apr-18 09:36:10 GMT; path=/; domain=.typicode.com; HttpOnly", "X-Content-Type-Options": "nosniff", "Vary": "Accept-Encoding", "Content-Length": "2", "Server": "cloudflare-nginx", "Pragma": "no-cache", "Date": "Tue, 18 Apr 2017 09:36:11 GMT", "Etag": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\"", "Expires": "-1", "Content-Type": "application/json; charset=utf-8"}, "responseBodySize": 2, "responseBody": "{}"}, "duration": 0.232999}], "extras": {"full_name": "tests.apiritif.test_transactions.TestRequests.test_2_multiple_requests", "file": "/home/dmand/src/taurus/tests/apiritif/test_transactions.py", "description": null}, "duration": 0.26345014572143555}
{"error_msg": null, "test_case": "Transaction", "status": "PASSED", "start_time": 1492508229.9906917, "error_trace": null, "test_suite": "test_3_toplevel_transaction", "subsamples": [{"error_msg": null, "test_case": "https://jsonplaceholder.typicode.com/", "status": "PASSED", "start_time": 1492508230.026879, "error_trace": null, "test_suite": "test_3_toplevel_transaction", "subsamples": [], "extras": {"requestSize": 0, "connectTime": 0, "responseMessage": "OK", "requestBodySize": 0, "responseSize": 6848, "requestURI": "https://jsonplaceholder.typicode.com/", "assertions": [], "requestHeadersSize": 0, "responseHeadersSize": 560, "requestMethod": "GET", "requestBody": "", "latency": 0, "responseCode": 200, "requestHeaders": {}, "requestCookiesSize": 52, "requestCookiesRaw": "__cfduid=d8dcc5ca92513569f9f30ecd45cccedbf1492508171", "requestCookies": {"__cfduid": "d8dcc5ca92513569f9f30ecd45cccedbf1492508171"}, "responseTime": 0.034231, "responseHeaders": {"Cache-Control": "public, max-age=14400", "CF-RAY": "3516a3653c584eb4-DME", "X-Powered-By": "Express", "CF-Cache-Status": "HIT", "Connection": "keep-alive", "Via": "1.1 vegur", "Access-Control-Allow-Credentials": "true", "Last-Modified": "Mon, 10 Apr 2017 21:57:52 GMT", "Set-Cookie": "__cfduid=d8dcc5ca92513569f9f30ecd45cccedbf1492508171; expires=Wed, 18-Apr-18 09:36:11 GMT; path=/; domain=.typicode.com; HttpOnly", "Transfer-Encoding": "chunked", "Vary": "Accept-Encoding", "Server": "cloudflare-nginx", "Date": "Tue, 18 Apr 2017 09:36:11 GMT", "Expires": "Tue, 18 Apr 2017 13:36:11 GMT", "Content-Type": "text/html; charset=UTF-8"}, "responseBodySize": 6844, "responseBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>JSONPlaceholder - Fake online REST API for developers</title>\n<meta name=\"description\" content=\"Fake online REST API for developers\">\n<meta name=\"author\" content=\"Typicode\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/styles/github.min.css\">\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/highlight.min.js\"></script>\n<script>hljs.initHighlightingOnLoad();</script>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\">\n \n<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\n</head>\n<body>\n<header>\n<h1><img src=\"http://i.imgur.com/QRlAg0b.png\"><br>JSONPlaceholder\u00a0</h1>\n<p>\nFake Online REST API for Testing and Prototyping<br>\n<small>\npowered by <a href=\"https://github.com/typicode/json-server\">JSON Server</a>\nand <a href=\"https://github.com/typicode/lowdb\">lowdb</a>\n</small>\n</p>\n</header>\n<div class=\"narrow\">\n<div class=\"center\">\n \n<div class=\"inline\">\n<div id=\"fb-root\"></div>\n<script>(function(d, s, id) {\n            var js, fjs = d.getElementsByTagName(s)[0];\n            if (d.getElementById(id)) return;\n            js = d.createElement(s); js.id = id;\n            js.src = \"//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.0\";\n            fjs.parentNode.insertBefore(js, fjs);\n          }(document, 'script', 'facebook-jssdk'));</script>\n<div class=\"fb-like\" data-href=\"http://jsonplaceholder.typicode.com/\" data-layout=\"button_count\" data-action=\"recommend\" data-show-faces=\"false\" data-share=\"false\"></div>\n</div>\n<div class=\"inline\">\n<a class=\"twitter-follow-button\" href=\"https://twitter.com/typicode\" data-show-count=\"false\">\nFollow @typicode\n</a>\n</div>\n<div class=\"center\">\n<a class=\"sponsor\" href=\"https://patreon.com/typicode\" onclick=\"trackOutboundLink('https://patreon.com/typicode')\">\nSupport <b>JSONPlaceholder</b> and <b>my other OSS projects</b> on <b>Patreon</b> <i class=\"fa fa-smile-o\" aria-hidden=\"true\"></i>\n</a>\n</div>\n</div>\n<h2>Intro</h2>\n<p>\nJSONPlaceholder is a free online REST service that you can use whenever you need some fake data.\n</p>\n<p>\nIt's great for tutorials, faking a server, sharing code examples, ...\n</p>\n<h2>Example</h2>\n<p>Run this code in a console or from anywhere (CORS and JSONP supported).</p>\n<pre><code id=\"example\" class=\"javascript\">var root = 'http://jsonplaceholder.typicode.com';\n\n$.ajax({\n  url: root + '/posts/1',\n  method: 'GET'\n}).then(function(data) {\n  console.log(data);\n});</code></pre>\n<p>\n<button id=\"run\">Run</button>\n</p>\n<p id=\"result\" class=\"json\">\"Try me!\"</p>\n<h2>Resources</h2>\n<p>\nInspired by common use cases.\n</p>\n<table>\n<tr><td><a href=\"/posts\">/posts</a></td><td>100 items</td></tr>\n<tr><td><a href=\"/comments\">/comments</a></td><td>500 items</td></tr>\n<tr><td><a href=\"/albums\">/albums</a></td><td>100 items</td></tr>\n<tr><td><a href=\"/photos\">/photos</a></td><td>5000 items</td></tr>\n<tr><td><a href=\"/todos\">/todos</a></td><td>200 items</td></tr>\n<tr><td><a href=\"/users\">/users</a></td><td>10 items</td></tr>\n</table>\n<h2>Routes</h2>\n<p>\nAll HTTP verbs are supported.<br>\nView usage <a href=\"https://github.com/typicode/jsonplaceholder#how-to\">examples</a>.\n</p>\n<table>\n<tr><td class=\"verb\">GET</td><td><a href=\"/posts\">/posts</a></td></tr>\n<tr><td class=\"verb\">GET</td><td><a href=\"/posts/1\">/posts/1</a></td></tr>\n<tr><td class=\"verb\">GET</td><td><a href=\"/posts/1/comments\">/posts/1/comments</a></td></tr>\n<tr><td class=\"verb\">GET</td><td><a href=\"/comments?postId=1\">/comments?postId=1</a></td></tr>\n<tr><td class=\"verb\">GET</td><td><a href=\"/posts?userId=1\">/posts?userId=1</a></td></tr>\n<tr><td class=\"verb\">POST</td><td>/posts</td></tr>\n<tr><td class=\"verb\">PUT</td><td>/posts/1</td></tr>\n<tr><td class=\"verb\">PATCH</td><td>/posts/1</td></tr>\n<tr><td class=\"verb\">DELETE</td><td>/posts/1</td></tr>\n</tr>\n</table>\n<h2>Use your OWN data</h2>\n<p>\n<a href=\"https://github.com/typicode/json-server\">JSON Server</a> powers this website.\nYou can use it to create the same fake API in less than <strong>30 seconds</strong> with your own data.\n</p>\n<pre><code class=\"bash\">npm install -g json-server</code></pre>\n</div>\n<footer>\n<p>\nCoded and built with <i class=\"fa fa-heart\"></i>\nby <a href=\"https://github.com/typicode\">typicode</a>.\nSource code available on\n<a href=\"https://github.com/typicode/jsonplaceholder\">GitHub</a>.\n</p>\n</footer>\n<a href=\"https://github.com/typicode/hotel\" class=\"more\">\n<p>\nHotel - \ud83c\udfe9 the friendly process manager for developers\n</p>\n</a>\n \n<script>\n      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n      })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n\n      ga('create', 'UA-44497010-1', 'typicode.com');\n      ga('send', 'pageview');\n\n      var trackOutboundLink = function(url) {\n        ga('send', 'event', 'outbound', 'click', url, {\n          'transport': 'beacon'\n        });\n      }\n    </script>\n<script>window.twttr = (function(d, s, id) {\n      var js, fjs = d.getElementsByTagName(s)[0],\n        t = window.twttr || {};\n      if (d.getElementById(id)) return t;\n      js = d.createElement(s);\n      js.id = id;\n      js.src = \"https://platform.twitter.com/widgets.js\";\n      fjs.parentNode.insertBefore(js, fjs);\n\n      t._e = [];\n      t.ready = function(f) {\n        t._e.push(f);\n      };\n\n      return t;\n    }(document, \"script\", \"twitter-wjs\"));</script>\n<script src=\"https://code.jquery.com/jquery-2.1.3.min.js\"></script>\n<script>\n      // Use http or https based on location.protocol\n      var exampleText = $('#example').text()\n      $('#example').text(exampleText.replace('http:', location.protocol))\n\n      // Highlight result element\n      $('#result').each(function(i, block) {\n        hljs.highlightBlock(block);\n      });\n\n      // Run example\n      $('#run').click(function() {\n        var root = location.protocol + '//jsonplaceholder.typicode.com';\n        $.ajax({\n          url: root + '/posts/1',\n          method: 'GET'\n        }).then(function(data) {\n          var str = JSON.stringify(data, null, '\\t')\n          $('#result').html(\n            str.replace(/\\n/g, '<br/>')\n               .replace(/\\\\n/g, ' ')\n               .replace(/\\t/g, '&nbsp;&nbsp;')\n          );\n\n          $('#result').each(function(i, block) {\n            hljs.highlightBlock(block);\n          });\n        });\n      });\n\n      // Tell that jQuery can be used in console\n      console.log('You can use jQuery functions')\n    </script>\n</body>\n</html>\n"}, "duration": 0.034231}, {"error_msg": null, "test_case": "https://jsonplaceholder.typicode.com/2", "status": "PASSED", "start_time": 1492508230.056419, "error_trace": null, "test_suite": "test_3_toplevel_transaction", "subsamples": [], "extras": {"requestSize": 0, "connectTime": 0, "responseMessage": "Not Found", "requestBodySize": 0, "responseSize": 2, "requestURI": "https://jsonplaceholder.typicode.com/2", "assertions": [], "requestHeadersSize": 0, "responseHeadersSize": 562, "requestMethod": "GET", "requestBody": "", "latency": 0, "responseCode": 404, "requestHeaders": {}, "requestCookiesSize": 52, "requestCookiesRaw": "__cfduid=d8dcc5ca92513569f9f30ecd45cccedbf1492508171", "requestCookies": {"__cfduid": "d8dcc5ca92513569f9f30ecd45cccedbf1492508171"}, "responseTime": 0.028567, "responseHeaders": {"Cache-Control": "no-cache", "CF-RAY": "3516a3656c814eb4-DME", "X-Powered-By": "Express", "CF-Cache-Status": "HIT", "Connection": "keep-alive", "Via": "1.1 vegur", "Access-Control-Allow-Credentials": "true", "Set-Cookie": "__cfduid=d8dcc5ca92513569f9f30ecd45cccedbf1492508171; expires=Wed, 18-Apr-18 09:36:11 GMT; path=/; domain=.typicode.com; HttpOnly", "X-Content-Type-Options": "nosniff", "Vary": "Accept-Encoding", "Content-Length": "2", "Server": "cloudflare-nginx", "Pragma": "no-cache", "Date": "Tue, 18 Apr 2017 09:36:11 GMT", "Etag": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\"", "Expires": "-1", "Content-Type": "application/json; charset=utf-8"}, "responseBodySize": 2, "responseBody": "{}"}, "duration": 0.028567}], "extras": {}, "duration": 0.0661473274230957}
{"error_msg": null, "test_case": "Transaction", "status": "PASSED", "start_time": 1492508230.0780833, "error_trace": null, "test_suite": "test_4_mixed_transaction", "subsamples": [{"error_msg": null, "test_case": "https://jsonplaceholder.typicode.com/2", "status": "PASSED", "start_time": 1492508230.124553, "error_trace": null, "test_suite": "test_4_mixed_transaction", "subsamples": [], "extras": {"requestSize": 0, "connectTime": 0, "responseMessage": "Not Found", "requestBodySize": 0, "responseSize": 2, "requestURI": "https://jsonplaceholder.typicode.com/2", "assertions": [], "requestHeadersSize": 0, "responseHeadersSize": 562, "requestMethod": "GET", "requestBody": "", "latency": 0, "responseCode": 404, "requestHeaders": {}, "requestCookiesSize": 52, "requestCookiesRaw": "__cfduid=d8dcc5ca92513569f9f30ecd45cccedbf1492508171", "requestCookies": {"__cfduid": "d8dcc5ca92513569f9f30ecd45cccedbf1492508171"}, "responseTime": 0.04557, "responseHeaders": {"Cache-Control": "no-cache", "CF-RAY": "3516a365bcc34eb4-DME", "X-Powered-By": "Express", "CF-Cache-Status": "HIT", "Connection": "keep-alive", "Via": "1.1 vegur", "Access-Control-Allow-Credentials": "true", "Set-Cookie": "__cfduid=d8dcc5ca92513569f9f30ecd45cccedbf1492508171; expires=Wed, 18-Apr-18 09:36:11 GMT; path=/; domain=.typicode.com; HttpOnly", "X-Content-Type-Options": "nosniff", "Vary": "Accept-Encoding", "Content-Length": "2", "Server": "cloudflare-nginx", "Pragma": "no-cache", "Date": "Tue, 18 Apr 2017 09:36:11 GMT", "Etag": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\"", "Expires": "-1", "Content-Type": "application/json; charset=utf-8"}, "responseBodySize": 2, "responseBody": "{}"}, "duration": 0.04557}], "extras": {}, "duration": 0.0468897819519043}
{"error_msg": null, "test_case": "Transaction 1", "status": "PASSED", "start_time": 1492508230.1258223, "error_trace": null, "test_suite": "test_5_multiple_transactions", "subsamples": [{"error_msg": null, "test_case": "https://jsonplaceholder.typicode.com/", "status": "PASSED", "start_time": 1492508230.149467, "error_trace": null, "test_suite": "test_5_multiple_transactions", "subsamples": [], "extras": {"requestSize": 0, "connectTime": 0, "responseMessage": "OK", "requestBodySize": 0, "responseSize": 6848, "requestURI": "https://jsonplaceholder.typicode.com/", "assertions": [], "requestHeadersSize": 0, "responseHeadersSize": 560, "requestMethod": "GET", "requestBody": "", "latency": 0, "responseCode": 200, "requestHeaders": {}, "requestCookiesSize": 52, "requestCookiesRaw": "__cfduid=d8dcc5ca92513569f9f30ecd45cccedbf1492508171", "requestCookies": {"__cfduid": "d8dcc5ca92513569f9f30ecd45cccedbf1492508171"}, "responseTime": 0.021902, "responseHeaders": {"Cache-Control": "public, max-age=14400", "CF-RAY": "3516a3660d064eb4-DME", "X-Powered-By": "Express", "CF-Cache-Status": "HIT", "Connection": "keep-alive", "Via": "1.1 vegur", "Access-Control-Allow-Credentials": "true", "Last-Modified": "Mon, 10 Apr 2017 21:57:52 GMT", "Set-Cookie": "__cfduid=d8dcc5ca92513569f9f30ecd45cccedbf1492508171; expires=Wed, 18-Apr-18 09:36:11 GMT; path=/; domain=.typicode.com; HttpOnly", "Transfer-Encoding": "chunked", "Vary": "Accept-Encoding", "Server": "cloudflare-nginx", "Date": "Tue, 18 Apr 2017 09:36:11 GMT", "Expires": "Tue, 18 Apr 2017 13:36:11 GMT", "Content-Type": "text/html; charset=UTF-8"}, "responseBodySize": 6844, "responseBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>JSONPlaceholder - Fake online REST API for developers</title>\n<meta name=\"description\" content=\"Fake online REST API for developers\">\n<meta name=\"author\" content=\"Typicode\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/styles/github.min.css\">\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/highlight.min.js\"></script>\n<script>hljs.initHighlightingOnLoad();</script>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\">\n \n<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\n</head>\n<body>\n<header>\n<h1><img src=\"http://i.imgur.com/QRlAg0b.png\"><br>JSONPlaceholder\u00a0</h1>\n<p>\nFake Online REST API for Testing and Prototyping<br>\n<small>\npowered by <a href=\"https://github.com/typicode/json-server\">JSON Server</a>\nand <a href=\"https://github.com/typicode/lowdb\">lowdb</a>\n</small>\n</p>\n</header>\n<div class=\"narrow\">\n<div class=\"center\">\n \n<div class=\"inline\">\n<div id=\"fb-root\"></div>\n<script>(function(d, s, id) {\n            var js, fjs = d.getElementsByTagName(s)[0];\n            if (d.getElementById(id)) return;\n            js = d.createElement(s); js.id = id;\n            js.src = \"//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.0\";\n            fjs.parentNode.insertBefore(js, fjs);\n          }(document, 'script', 'facebook-jssdk'));</script>\n<div class=\"fb-like\" data-href=\"http://jsonplaceholder.typicode.com/\" data-layout=\"button_count\" data-action=\"recommend\" data-show-faces=\"false\" data-share=\"false\"></div>\n</div>\n<div class=\"inline\">\n<a class=\"twitter-follow-button\" href=\"https://twitter.com/typicode\" data-show-count=\"false\">\nFollow @typicode\n</a>\n</div>\n<div class=\"center\">\n<a class=\"sponsor\" href=\"https://patreon.com/typicode\" onclick=\"trackOutboundLink('https://patreon.com/typicode')\">\nSupport <b>JSONPlaceholder</b> and <b>my other OSS projects</b> on <b>Patreon</b> <i class=\"fa fa-smile-o\" aria-hidden=\"true\"></i>\n</a>\n</div>\n</div>\n<h2>Intro</h2>\n<p>\nJSONPlaceholder is a free online REST service that you can use whenever you need some fake data.\n</p>\n<p>\nIt's great for tutorials, faking a server, sharing code examples, ...\n</p>\n<h2>Example</h2>\n<p>Run this code in a console or from anywhere (CORS and JSONP supported).</p>\n<pre><code id=\"example\" class=\"javascript\">var root = 'http://jsonplaceholder.typicode.com';\n\n$.ajax({\n  url: root + '/posts/1',\n  method: 'GET'\n}).then(function(data) {\n  console.log(data);\n});</code></pre>\n<p>\n<button id=\"run\">Run</button>\n</p>\n<p id=\"result\" class=\"json\">\"Try me!\"</p>\n<h2>Resources</h2>\n<p>\nInspired by common use cases.\n</p>\n<table>\n<tr><td><a href=\"/posts\">/posts</a></td><td>100 items</td></tr>\n<tr><td><a href=\"/comments\">/comments</a></td><td>500 items</td></tr>\n<tr><td><a href=\"/albums\">/albums</a></td><td>100 items</td></tr>\n<tr><td><a href=\"/photos\">/photos</a></td><td>5000 items</td></tr>\n<tr><td><a href=\"/todos\">/todos</a></td><td>200 items</td></tr>\n<tr><td><a href=\"/users\">/users</a></td><td>10 items</td></tr>\n</table>\n<h2>Routes</h2>\n<p>\nAll HTTP verbs are supported.<br>\nView usage <a href=\"https://github.com/typicode/jsonplaceholder#how-to\">examples</a>.\n</p>\n<table>\n<tr><td class=\"verb\">GET</td><td><a href=\"/posts\">/posts</a></td></tr>\n<tr><td class=\"verb\">GET</td><td><a href=\"/posts/1\">/posts/1</a></td></tr>\n<tr><td class=\"verb\">GET</td><td><a href=\"/posts/1/comments\">/posts/1/comments</a></td></tr>\n<tr><td class=\"verb\">GET</td><td><a href=\"/comments?postId=1\">/comments?postId=1</a></td></tr>\n<tr><td class=\"verb\">GET</td><td><a href=\"/posts?userId=1\">/posts?userId=1</a></td></tr>\n<tr><td class=\"verb\">POST</td><td>/posts</td></tr>\n<tr><td class=\"verb\">PUT</td><td>/posts/1</td></tr>\n<tr><td class=\"verb\">PATCH</td><td>/posts/1</td></tr>\n<tr><td class=\"verb\">DELETE</td><td>/posts/1</td></tr>\n</tr>\n</table>\n<h2>Use your OWN data</h2>\n<p>\n<a href=\"https://github.com/typicode/json-server\">JSON Server</a> powers this website.\nYou can use it to create the same fake API in less than <strong>30 seconds</strong> with your own data.\n</p>\n<pre><code class=\"bash\">npm install -g json-server</code></pre>\n</div>\n<footer>\n<p>\nCoded and built with <i class=\"fa fa-heart\"></i>\nby <a href=\"https://github.com/typicode\">typicode</a>.\nSource code available on\n<a href=\"https://github.com/typicode/jsonplaceholder\">GitHub</a>.\n</p>\n</footer>\n<a href=\"https://github.com/typicode/hotel\" class=\"more\">\n<p>\nHotel - \ud83c\udfe9 the friendly process manager for developers\n</p>\n</a>\n \n<script>\n      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n      })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n\n      ga('create', 'UA-44497010-1', 'typicode.com');\n      ga('send', 'pageview');\n\n      var trackOutboundLink = function(url) {\n        ga('send', 'event', 'outbound', 'click', url, {\n          'transport': 'beacon'\n        });\n      }\n    </script>\n<script>window.twttr = (function(d, s, id) {\n      var js, fjs = d.getElementsByTagName(s)[0],\n        t = window.twttr || {};\n      if (d.getElementById(id)) return t;\n      js = d.createElement(s);\n      js.id = id;\n      js.src = \"https://platform.twitter.com/widgets.js\";\n      fjs.parentNode.insertBefore(js, fjs);\n\n      t._e = [];\n      t.ready = function(f) {\n        t._e.push(f);\n      };\n\n      return t;\n    }(document, \"script\", \"twitter-wjs\"));</script>\n<script src=\"https://code.jquery.com/jquery-2.1.3.min.js\"></script>\n<script>\n      // Use http or https based on location.protocol\n      var exampleText = $('#example').text()\n      $('#example').text(exampleText.replace('http:', location.protocol))\n\n      // Highlight result element\n      $('#result').each(function(i, block) {\n        hljs.highlightBlock(block);\n      });\n\n      // Run example\n      $('#run').click(function() {\n        var root = location.protocol + '//jsonplaceholder.typicode.com';\n        $.ajax({\n          url: root + '/posts/1',\n          method: 'GET'\n        }).then(function(data) {\n          var str = JSON.stringify(data, null, '\\t')\n          $('#result').html(\n            str.replace(/\\n/g, '<br/>')\n               .replace(/\\\\n/g, ' ')\n               .replace(/\\t/g, '&nbsp;&nbsp;')\n          );\n\n          $('#result').each(function(i, block) {\n            hljs.highlightBlock(block);\n          });\n        });\n      });\n\n      // Tell that jQuery can be used in console\n      console.log('You can use jQuery functions')\n    </script>\n</body>\n</html>\n"}, "duration": 0.021902}, {"error_msg": null, "test_case": "https://jsonplaceholder.typicode.com/2", "status": "PASSED", "start_time": 1492508230.1693373, "error_trace": null, "test_suite": "test_5_multiple_transactions", "subsamples": [], "extras": {"requestSize": 0, "connectTime": 0, "responseMessage": "Not Found", "requestBodySize": 0, "responseSize": 2, "requestURI": "https://jsonplaceholder.typicode.com/2", "assertions": [], "requestHeadersSize": 0, "responseHeadersSize": 562, "requestMethod": "GET", "requestBody": "", "latency": 0, "responseCode": 404, "requestHeaders": {}, "requestCookiesSize": 52, "requestCookiesRaw": "__cfduid=d8dcc5ca92513569f9f30ecd45cccedbf1492508171", "requestCookies": {"__cfduid": "d8dcc5ca92513569f9f30ecd45cccedbf1492508171"}, "responseTime": 0.018907, "responseHeaders": {"Cache-Control": "no-cache", "CF-RAY": "3516a3663d2b4eb4-DME", "X-Powered-By": "Express", "CF-Cache-Status": "HIT", "Connection": "keep-alive", "Via": "1.1 vegur", "Access-Control-Allow-Credentials": "true", "Set-Cookie": "__cfduid=d8dcc5ca92513569f9f30ecd45cccedbf1492508171; expires=Wed, 18-Apr-18 09:36:11 GMT; path=/; domain=.typicode.com; HttpOnly", "X-Content-Type-Options": "nosniff", "Vary": "Accept-Encoding", "Content-Length": "2", "Server": "cloudflare-nginx", "Pragma": "no-cache", "Date": "Tue, 18 Apr 2017 09:36:11 GMT", "Etag": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\"", "Expires": "-1", "Content-Type": "application/json; charset=utf-8"}, "responseBodySize": 2, "responseBody": "{}"}, "duration": 0.018907}], "extras": {}, "duration": 0.04399704933166504}
{"error_msg": null, "test_case": "Transaction 2", "status": "PASSED", "start_time": 1492508230.1702583, "error_trace": null, "test_suite": "test_5_multiple_transactions", "subsamples": [{"error_msg": null, "test_case": "https://jsonplaceholder.typicode.com/", "status": "PASSED", "start_time": 1492508230.1926246, "error_trace": null, "test_suite": "test_5_multiple_transactions", "subsamples": [], "extras": {"requestSize": 0, "connectTime": 0, "responseMessage": "OK", "requestBodySize": 0, "responseSize": 6848, "requestURI": "https://jsonplaceholder.typicode.com/", "assertions": [], "requestHeadersSize": 0, "responseHeadersSize": 560, "requestMethod": "GET", "requestBody": "", "latency": 0, "responseCode": 200, "requestHeaders": {}, "requestCookiesSize": 52, "requestCookiesRaw": "__cfduid=d8dcc5ca92513569f9f30ecd45cccedbf1492508171", "requestCookies": {"__cfduid": "d8dcc5ca92513569f9f30ecd45cccedbf1492508171"}, "responseTime": 0.021464, "responseHeaders": {"Cache-Control": "public, max-age=14400", "CF-RAY": "3516a3665d544eb4-DME", "X-Powered-By": "Express", "CF-Cache-Status": "HIT", "Connection": "keep-alive", "Via": "1.1 vegur", "Access-Control-Allow-Credentials": "true", "Last-Modified": "Mon, 10 Apr 2017 21:57:52 GMT", "Set-Cookie": "__cfduid=d8dcc5ca92513569f9f30ecd45cccedbf1492508171; expires=Wed, 18-Apr-18 09:36:11 GMT; path=/; domain=.typicode.com; HttpOnly", "Transfer-Encoding": "chunked", "Vary": "Accept-Encoding", "Server": "cloudflare-nginx", "Date": "Tue, 18 Apr 2017 09:36:11 GMT", "Expires": "Tue, 18 Apr 2017 13:36:11 GMT", "Content-Type": "text/html; charset=UTF-8"}, "responseBodySize": 6844, "responseBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>JSONPlaceholder - Fake online REST API for developers</title>\n<meta name=\"description\" content=\"Fake online REST API for developers\">\n<meta name=\"author\" content=\"Typicode\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/styles/github.min.css\">\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/highlight.min.js\"></script>\n<script>hljs.initHighlightingOnLoad();</script>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\">\n \n<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\n</head>\n<body>\n<header>\n<h1><img src=\"http://i.imgur.com/QRlAg0b.png\"><br>JSONPlaceholder\u00a0</h1>\n<p>\nFake Online REST API for Testing and Prototyping<br>\n<small>\npowered by <a href=\"https://github.com/typicode/json-server\">JSON Server</a>\nand <a href=\"https://github.com/typicode/lowdb\">lowdb</a>\n</small>\n</p>\n</header>\n<div class=\"narrow\">\n<div class=\"center\">\n \n<div class=\"inline\">\n<div id=\"fb-root\"></div>\n<script>(function(d, s, id) {\n            var js, fjs = d.getElementsByTagName(s)[0];\n            if (d.getElementById(id)) return;\n            js = d.createElement(s); js.id = id;\n            js.src = \"//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.0\";\n            fjs.parentNode.insertBefore(js, fjs);\n          }(document, 'script', 'facebook-jssdk'));</script>\n<div class=\"fb-like\" data-href=\"http://jsonplaceholder.typicode.com/\" data-layout=\"button_count\" data-action=\"recommend\" data-show-faces=\"false\" data-share=\"false\"></div>\n</div>\n<div class=\"inline\">\n<a class=\"twitter-follow-button\" href=\"https://twitter.com/typicode\" data-show-count=\"false\">\nFollow @typicode\n</a>\n</div>\n<div class=\"center\">\n<a class=\"sponsor\" href=\"https://patreon.com/typicode\" onclick=\"trackOutboundLink('https://patreon.com/typicode')\">\nSupport <b>JSONPlaceholder</b> and <b>my other OSS projects</b> on <b>Patreon</b> <i class=\"fa fa-smile-o\" aria-hidden=\"true\"></i>\n</a>\n</div>\n</div>\n<h2>Intro</h2>\n<p>\nJSONPlaceholder is a free online REST service that you can use whenever you need some fake data.\n</p>\n<p>\nIt's great for tutorials, faking a server, sharing code examples, ...\n</p>\n<h2>Example</h2>\n<p>Run this code in a console or from anywhere (CORS and JSONP supported).</p>\n<pre><code id=\"example\" class=\"javascript\">var root = 'http://jsonplaceholder.typicode.com';\n\n$.ajax({\n  url: root + '/posts/1',\n  method: 'GET'\n}).then(function(data) {\n  console.log(data);\n});</code></pre>\n<p>\n<button id=\"run\">Run</button>\n</p>\n<p id=\"result\" class=\"json\">\"Try me!\"</p>\n<h2>Resources</h2>\n<p>\nInspired by common use cases.\n</p>\n<table>\n<tr><td><a href=\"/posts\">/posts</a></td><td>100 items</td></tr>\n<tr><td><a href=\"/comments\">/comments</a></td><td>500 items</td></tr>\n<tr><td><a href=\"/albums\">/albums</a></td><td>100 items</td></tr>\n<tr><td><a href=\"/photos\">/photos</a></td><td>5000 items</td></tr>\n<tr><td><a href=\"/todos\">/todos</a></td><td>200 items</td></tr>\n<tr><td><a href=\"/users\">/users</a></td><td>10 items</td></tr>\n</table>\n<h2>Routes</h2>\n<p>\nAll HTTP verbs are supported.<br>\nView usage <a href=\"https://github.com/typicode/jsonplaceholder#how-to\">examples</a>.\n</p>\n<table>\n<tr><td class=\"verb\">GET</td><td><a href=\"/posts\">/posts</a></td></tr>\n<tr><td class=\"verb\">GET</td><td><a href=\"/posts/1\">/posts/1</a></td></tr>\n<tr><td class=\"verb\">GET</td><td><a href=\"/posts/1/comments\">/posts/1/comments</a></td></tr>\n<tr><td class=\"verb\">GET</td><td><a href=\"/comments?postId=1\">/comments?postId=1</a></td></tr>\n<tr><td class=\"verb\">GET</td><td><a href=\"/posts?userId=1\">/posts?userId=1</a></td></tr>\n<tr><td class=\"verb\">POST</td><td>/posts</td></tr>\n<tr><td class=\"verb\">PUT</td><td>/posts/1</td></tr>\n<tr><td class=\"verb\">PATCH</td><td>/posts/1</td></tr>\n<tr><td class=\"verb\">DELETE</td><td>/posts/1</td></tr>\n</tr>\n</table>\n<h2>Use your OWN data</h2>\n<p>\n<a href=\"https://github.com/typicode/json-server\">JSON Server</a> powers this website.\nYou can use it to create the same fake API in less than <strong>30 seconds</strong> with your own data.\n</p>\n<pre><code class=\"bash\">npm install -g json-server</code></pre>\n</div>\n<footer>\n<p>\nCoded and built with <i class=\"fa fa-heart\"></i>\nby <a href=\"https://github.com/typicode\">typicode</a>.\nSource code available on\n<a href=\"https://github.com/typicode/jsonplaceholder\">GitHub</a>.\n</p>\n</footer>\n<a href=\"https://github.com/typicode/hotel\" class=\"more\">\n<p>\nHotel - \ud83c\udfe9 the friendly process manager for developers\n</p>\n</a>\n \n<script>\n      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n      })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n\n      ga('create', 'UA-44497010-1', 'typicode.com');\n      ga('send', 'pageview');\n\n      var trackOutboundLink = function(url) {\n        ga('send', 'event', 'outbound', 'click', url, {\n          'transport': 'beacon'\n        });\n      }\n    </script>\n<script>window.twttr = (function(d, s, id) {\n      var js, fjs = d.getElementsByTagName(s)[0],\n        t = window.twttr || {};\n      if (d.getElementById(id)) return t;\n      js = d.createElement(s);\n      js.id = id;\n      js.src = \"https://platform.twitter.com/widgets.js\";\n      fjs.parentNode.insertBefore(js, fjs);\n\n      t._e = [];\n      t.ready = function(f) {\n        t._e.push(f);\n      };\n\n      return t;\n    }(document, \"script\", \"twitter-wjs\"));</script>\n<script src=\"https://code.jquery.com/jquery-2.1.3.min.js\"></script>\n<script>\n      // Use http or https based on location.protocol\n      var exampleText = $('#example').text()\n      $('#example').text(exampleText.replace('http:', location.protocol))\n\n      // Highlight result element\n      $('#result').each(function(i, block) {\n        hljs.highlightBlock(block);\n      });\n\n      // Run example\n      $('#run').click(function() {\n        var root = location.protocol + '//jsonplaceholder.typicode.com';\n        $.ajax({\n          url: root + '/posts/1',\n          method: 'GET'\n        }).then(function(data) {\n          var str = JSON.stringify(data, null, '\\t')\n          $('#result').html(\n            str.replace(/\\n/g, '<br/>')\n               .replace(/\\\\n/g, ' ')\n               .replace(/\\t/g, '&nbsp;&nbsp;')\n          );\n\n          $('#result').each(function(i, block) {\n            hljs.highlightBlock(block);\n          });\n        });\n      });\n\n      // Tell that jQuery can be used in console\n      console.log('You can use jQuery functions')\n    </script>\n</body>\n</html>\n"}, "duration": 0.021464}, {"error_msg": null, "test_case": "https://jsonplaceholder.typicode.com/2", "status": "PASSED", "start_time": 1492508230.215099, "error_trace": null, "test_suite": "test_5_multiple_transactions", "subsamples": [], "extras": {"requestSize": 0, "connectTime": 0, "responseMessage": "Not Found", "requestBodySize": 0, "responseSize": 2, "requestURI": "https://jsonplaceholder.typicode.com/2", "assertions": [], "requestHeadersSize": 0, "responseHeadersSize": 562, "requestMethod": "GET", "requestBody": "", "latency": 0, "responseCode": 404, "requestHeaders": {}, "requestCookiesSize": 52, "requestCookiesRaw": "__cfduid=d8dcc5ca92513569f9f30ecd45cccedbf1492508171", "requestCookies": {"__cfduid": "d8dcc5ca92513569f9f30ecd45cccedbf1492508171"}, "responseTime": 0.021604, "responseHeaders": {"Cache-Control": "no-cache", "CF-RAY": "3516a3667d764eb4-DME", "X-Powered-By": "Express", "CF-Cache-Status": "HIT", "Connection": "keep-alive", "Via": "1.1 vegur", "Access-Control-Allow-Credentials": "true", "Set-Cookie": "__cfduid=d8dcc5ca92513569f9f30ecd45cccedbf1492508171; expires=Wed, 18-Apr-18 09:36:11 GMT; path=/; domain=.typicode.com; HttpOnly", "X-Content-Type-Options": "nosniff", "Vary": "Accept-Encoding", "Content-Length": "2", "Server": "cloudflare-nginx", "Pragma": "no-cache", "Date": "Tue, 18 Apr 2017 09:36:11 GMT", "Etag": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\"", "Expires": "-1", "Content-Type": "application/json; charset=utf-8"}, "responseBodySize": 2, "responseBody": "{}"}, "duration": 0.021604}], "extras": {}, "duration": 0.04526877403259277}
