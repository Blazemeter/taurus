---
services:
- virtual-display
- module: shellexec
  prepare: 
  - command: python3 -m http.server --bind localhost 8000
    background: true
  - command: sleep 900 && exit 1  # this will make it interrupt in case it hangs
    background: true
  #check:
  #- command: ps auxff > processlist.txt
  #  cwd: artifacts-dir

reporting:
- module: passfail
  criteria:
  - fail>0

# all of functional-style executors
---
execution:
- executor: selenium  # Selenium Firefox
  concurrency: 1
  hold-for: 10s
  iterations: 10
  scenario:
    browser: Firefox
    requests:
      - url: http://localhost:8000/
        label: Selenium Firefox

- executor: selenium  # Selenium Chrome
  concurrency: 1
  hold-for: 10s
  iterations: 10
  scenario:
    browser: Chrome
    requests:
      - url: http://localhost:8000/
        label: Selenium Chrome

- executor: selenium  # Selenium_TestNG
  concurrency: 1
  hold-for: 10s
  iterations: 10
  runner: testng
  scenario:
    script: selenium/testng/selenium-testng.jar

---
execution:
- executor: selenium  # Selenium Ruby
  concurrency: 1
  hold-for: 10s
  iterations: 10
  scenario:
    script: selenium/rspec_example.rb

- executor: selenium  # Selenium Mocha
  concurrency: 1
  hold-for: 10s
  iterations: 10
  scenario:
    script: selenium/mocha_example.js

- executor: junit  # JUnit_test
  concurrency: 1
  hold-for: 10s
  iterations: 10
  scenario:
    script: functional/JUnitTest.java

- executor: rspec  # Ruby test
  concurrency: 1
  hold-for: 10s
  iterations: 10
  scenario:
    script: functional/rspec_example.rb

- executor: mocha  # Mocha
  concurrency: 1
  hold-for: 10s
  iterations: 10
  scenario:
    script: functional/mocha_example.js

- executor: apiritif  # test_Apiritif
  concurrency: 1
  hold-for: 10s
  iterations: 10
  scenario:
    script: functional/test_nose.py

- executor: pytest  # test_Pytest x2
  concurrency: 1
  hold-for: 10s
  iterations: 10
  scenario:
    script: selenium/pytest_example.py

- executor: wdio  # WDIO test
  concurrency: 1
  hold-for: 10s
  iterations: 10
  scenario:
    script: functional/wdio.conf.js

- executor: robot  # Robot x5
  concurrency: 1
  hold-for: 10s
  iterations: 10
  scenario:
    script: functional/robot-simple/test.robot

- executor: newman  # Newman x3
  concurrency: 1
  hold-for: 10s
  iterations: 10
  scenario:
    script: functional/postman-sample-collection.json

- executor: k6  # https://blazedemo.com/?tool=K6
  concurrency: 1
  hold-for: 10s
  iterations: 10
  scenario:
    script: k6/k6_example.js
---
# all of load-style executors
execution:
- executor: jmeter  # JMeter
  concurrency: 1
  hold-for: 10s
  iterations: 10
  scenario:
    requests:
      - url: http://localhost:8000/
        label: JMeter

- executor: gatling  # Gatling
  concurrency: 1
  hold-for: 10s
  iterations: 10
  scenario:
    properties:
      dangerous: "IFS"
    requests:
      - url: http://localhost:8000/
        label: Gatling

- executor: gatling  # Gatling
  scenario:
    script: gatling/test11.jar
    simulation: com.test.RecordedSimulation

- executor: siege  # http://localhost:8000/?tool=Siege
  concurrency: 1
  hold-for: 10s
  iterations: 10
  scenario:
    requests:
      - url: http://localhost:8000/?tool=Siege
        label: siege

- executor: locust  # /?tool=Locust
  concurrency: 1
  hold-for: 10s
  iterations: 10
  scenario:
    requests:
      - url: http://localhost:8000/?tool=Locust

- executor: tsung  # localhost/?tool=Tsung
  concurrency: 1
  hold-for: 10s
  scenario:
    requests:
      - url: http://localhost:8000/?tool=Tsung

- executor: ab  # AB
  concurrency: 1
  hold-for: 10s
  iterations: 10
  scenario:
    requests:
      - url: http://localhost:8000/
        label: AB

- executor: molotov  # Molotov_test
  concurrency: 1
  hold-for: 5s
  scenario:
    script: molotov/blazedemo.py

- executor: apiritif  # http://localhost:8000/?tool=Apiritif
  concurrency: 1
  hold-for: 10s
  scenario:
    requests:
      - url: http://localhost:8000/?tool=Apiritif

- executor: nunit  # IsFive_ExistingVariable_ReturnFive - 10 samples
  concurrency: 1
  hold-for: 10s
  iterations: 10
  scenario:
    script: selenium/dotnet/NUnitTests.dll

- executor: xunit  # IsFive_ExistingVariable_ReturnFive - 10 more samples
  concurrency: 1
  hold-for: 10s
  iterations: 10
  scenario:
    script: selenium/dotnet/XUnitTests.dll

modules:
  gatling:
    version: 3.9.5
    properties:
      gatling.data.file.bufferSize: 512 # output buffer size, 256 bytes by default
      your_variable: 1024
    additional-classpath:
      - test.jar